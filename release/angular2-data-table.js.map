{"version":3,"file":null,"sources":["../node_modules/rollup-plugin-typescript/src/typescript-helpers.js","../src/utils/column.ts","../src/utils/scrollbarWidth.ts","../src/enums/SortType.ts","../src/enums/SortDirection.ts","../src/utils/sort.ts","../src/models/Sort.ts","../src/services/State.ts","../src/utils/VisibilityObserver.ts","../src/directives/Visibility.ts","../src/utils/math.ts","../src/enums/ColumnMode.ts","../src/models/TableOptions.ts","../src/utils/id.ts","../src/utils/camelCase.ts","../src/models/TableColumn.ts","../src/components/DataTableColumn.ts","../src/directives/LongPress.ts","../src/directives/Draggable.ts","../src/directives/Resizeable.ts","../src/directives/Orderable.ts","../src/components/header/HeaderCell.ts","../src/components/header/Header.ts","../src/enums/SelectionType.ts","../src/utils/keys.ts","../src/utils/selection.ts","../src/components/body/ProgressBar.ts","../src/utils/deepGetter.ts","../src/directives/TemplateWrapper.ts","../src/components/body/BodyCell.ts","../src/components/body/BodyRow.ts","../src/directives/Scroller.ts","../src/components/body/Body.ts","../src/components/footer/Pager.ts","../src/components/footer/Footer.ts","../src/components/DataTable.ts","../src/angular2-data-table.ts"],"sourcesContent":["export const __assign = Object.assign || function (target) {\n    for (var source, i = 1; i < arguments.length; i++) {\n        source = arguments[i];\n        for (var prop in source) {\n            if (Object.prototype.hasOwnProperty.call(source, prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n    return target;\n};\n\nexport function __extends(d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __metadata(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n}\n\nexport function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n}\n","/**\n * Returns the columns by pin.\n * @param {array} colsumns\n */\nexport function columnsByPin(cols) {\n  let ret = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if(cols) {\n    for(let col of cols) {\n      if(col.frozenLeft) {\n        ret.left.push(col);\n      } else if(col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Returns the widths of all group sets of a column\n * @param {object} groups\n * @param {array} all\n */\nexport function columnGroupWidths(groups, all) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: columnTotalWidth(all)\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} property width to get\n */\nexport function columnTotalWidth(columns, prop?) {\n  let totalWidth = 0;\n\n  if(columns) {\n    for(let c of columns) {\n      let has = prop && c[prop];\n      totalWidth = totalWidth + (has ? c[prop] : c.width);\n    }\n  }\n\n  return totalWidth;\n};\n","/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n * @return {int} width\n */\nexport function scrollbarWidth() {\n  let outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.msOverflowStyle = 'scrollbar';\n  document.body.appendChild(outer);\n\n  let widthNoScroll = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  let inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  let widthWithScroll = inner.offsetWidth;\n  outer.parentNode.removeChild(outer);\n\n  return widthNoScroll - widthWithScroll;\n};\n","export enum SortType {\n  single = 'single' as any,\n  multi = 'multi' as any\n}\n","export enum SortDirection {\n  asc = 'asc' as any,\n  desc = 'desc' as any\n}\n","import { Sort } from '../models/Sort';\nimport { SortType } from '../enums/SortType';\nimport { SortDirection } from '../enums/SortDirection';\n\n/**\n * Gets the next sort direction\n * @param  {SortType}      sortType\n * @param  {SortDirection} currentSort\n * @return {SortDirection}\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection {\n  if (sortType === SortType.single) {\n    if(current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if(!current) {\n      return SortDirection.asc;\n    } else if(current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if(current === SortDirection.desc) {\n      return undefined;\n    }\n  }\n};\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param  {any}    a\n * @param  {any}    b\n * @return {number} position\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n\n  if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * Sorts the rows\n * @param  {Array<any>}  rows\n * @param  {Array<Sort>} dirs\n * @return {Array<any>} results\n */\nexport function sortRows(rows: Array<any>, dirs: Array<Sort>) {\n  let temp = [...rows];\n\n  return temp.sort(function(a: any, b: any) {\n    for(const { prop, dir } of dirs) {\n      const comparison = dir !== SortDirection.desc ?\n        orderByComparator(a[prop], b[prop]) :\n        -orderByComparator(a[prop], b[prop]);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    // equal each other\n    return 0;\n  });\n}\n","import { SortDirection } from '../enums/SortDirection';\n\nexport class Sort {\n\n  prop: string;\n\n  dir: SortDirection;\n\n  constructor(props: any) {\n    Object.assign(this, props);\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { columnsByPin, columnGroupWidths } from '../utils/column';\nimport { scrollbarWidth } from '../utils/scrollbarWidth';\nimport { nextSortDir, sortRows } from '../utils/sort';\n\nimport { TableOptions } from '../models/TableOptions';\nimport { TableColumn } from '../models/TableColumn';\nimport { Sort } from '../models/Sort';\nimport { SortType } from '../enums/SortType';\n\n@Injectable()\nexport class StateService {\n\n  options: TableOptions;\n  rows: Array<any>;\n  selected: Array<any>;\n\n  onSelectionChange: EventEmitter<any> = new EventEmitter();\n  onRowsUpdate: EventEmitter<any> = new EventEmitter();\n  onPageChange: EventEmitter<any> = new EventEmitter();\n\n  scrollbarWidth: number = scrollbarWidth();\n  offsetX: number = 0;\n  offsetY: number = 0;\n  innerWidth: number = 0;\n  bodyHeight: number = 300;\n  HScrollPos: number = 0;\n\n  get columnsByPin() {\n    return columnsByPin(this.options.columns);\n  }\n\n  get columnGroupWidths() {\n    return columnGroupWidths(this.columnsByPin, this.options.columns);\n  }\n\n  get pageCount() {\n    if(!this.options.externalPaging) {\n      return this.rows.length;\n    } else {\n      return this.options.count;\n    }\n  }\n\n  get pageSize() {\n    // if(this.options.scrollbarV) {\n    //   console.log('cc', this.bodyHeight, this.options.rowHeight);\n    //   return Math.ceil(this.bodyHeight / this.options.rowHeight) + 1;\n    // } else if(this.options.limit) {\n    if(this.options.limit) {\n      return this.options.limit;\n    } else {\n      return this.rows.length;\n    }\n  }\n\n  get indexes() {\n    let first = 0;\n    let last = 0;\n\n    if(this.options.scrollbarV) {\n      const floor = Math.floor((this.offsetY || 0) / this.options.rowHeight);\n      first = Math.max(floor, 0);\n      last = Math.min(first + this.pageSize, this.pageCount);\n      // console.log('dd', first, last, this.pageSize, this.pageCount);\n    } else {\n      // first = Math.max(this.options.offset * this.pageSize, 0);\n      first = 0;\n      last = Math.min(first + this.pageSize, this.pageCount);\n    }\n\n    return { first, last };\n  }\n\n  setSelected(selected: Array<any>) {\n    if(!this.selected) {\n      this.selected = selected || [];\n    } else {\n      this.selected.splice(0, this.selected.length);\n      this.selected.push(...selected);\n    }\n\n    this.onSelectionChange.emit(this.selected);\n    return this;\n  }\n\n  setRows(rows: Array<any>) {\n    if(rows) {\n      this.rows = [...rows];\n      this.onRowsUpdate.emit(rows);\n    }\n    return this;\n  }\n\n  setOptions(options: TableOptions) {\n    this.options = options;\n    return this;\n  }\n\n  setPage(page: number) {\n    this.options.offset = page - 1;\n\n    this.onPageChange.emit({\n      offset: this.options.offset,\n      limit: this.pageSize,\n      count: this.pageCount\n    });\n  }\n\n  nextSort(column: TableColumn) {\n    const idx = this.options.sorts.findIndex(s =>\n      { return s.prop === column.prop });\n\n    let curSort = this.options.sorts[idx];\n    let curDir = undefined;\n    if(curSort) curDir = curSort.dir;\n\n    const dir = nextSortDir(this.options.sortType, curDir);\n    if(dir === undefined) {\n      this.options.sorts.splice(idx, 1);\n    } else if(curSort) {\n      this.options.sorts[idx].dir = dir;\n    } else {\n      if(this.options.sortType === SortType.single) {\n        this.options.sorts.splice(0, this.options.sorts.length);\n      }\n\n      this.options.sorts.push(new Sort({ dir, prop: column.prop }));\n    }\n\n    if(!column.comparator) {\n      this.setRows(sortRows(this.rows, this.options.sorts));\n    } else {\n      column.comparator(this.rows, this.options.sorts)\n    }\n  }\n\n}\n","import { IntersectionObserver } from './IntersectionObserver';\n\n/**\n * Observes changes to an elements visibility.\n * https://medium.com/@amcdnl/javascript-s-new-intersectionobserver-cdce8a73bef8#.evn5twug3\n *\n * Example:\n *\n * \t\tvar elm = document.getElementById(\"panda\");\n * \t \tnew VisibilityObserver(elm, function() {\n * \t\t\talert('PAndas rock!');\n* \t  });\n*\n */\nexport class VisibilityObserver {\n\n  observer: IntersectionObserver;\n  callback: any;\n\n  constructor(element, callback) {\n    this.callback = callback;\n\n    /*\n    // this is not working...\n    if(window.IntersectionObserver) {\n      this.observer = new IntersectionObserver(\n        this.processChanges.bind(this), { threshold: [0.5] });\n\n      this.observer.observe(element);\n    } else { this.runPolyfill(element); }\n    */\n\n   this.runPolyfill(element);\n  }\n\n  runPolyfill(element) {\n    let checkVisibility = () => {\n      const { width, height } = element.getBoundingClientRect();\n\n      if (width && height) {\n        this.callback && this.callback();\n      } else {\n        setTimeout(() => checkVisibility(), 10);\n      }\n    };\n\n    checkVisibility();\n  }\n\n  isVisible(boundingClientRect, intersectionRect) {\n    return ((intersectionRect.width * intersectionRect.height) /\n            (boundingClientRect.width * boundingClientRect.height) >= 0.5);\n  }\n\n  visibleTimerCallback(element, observer) {\n    delete element.visibleTimeout;\n\n    // Process any pending observations\n    this.processChanges(observer.takeRecords());\n\n    if ('isVisible' in element) {\n      delete element.isVisible;\n      this.callback && this.callback();\n      observer.unobserve(element);\n    }\n  }\n\n  processChanges(changes) {\n    changes.forEach((changeRecord) => {\n      let element = changeRecord.target;\n\n      element.isVisible = this.isVisible(\n        changeRecord.boundingClientRect,\n        changeRecord.intersectionRect);\n\n      if ('isVisible' in element) {\n        // Transitioned from hidden to visible\n        element.visibleTimeout = setTimeout(\n          this.visibleTimerCallback.bind(this),\n          1000,\n          element,\n          this.observer);\n      } else {\n        // Transitioned from visible to hidden\n        if ('visibleTimeout' in element) {\n          clearTimeout(element.visibleTimeout);\n          delete element.visibleTimeout;\n        }\n      }\n    });\n  }\n\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding\n} from '@angular/core';\n\nimport { VisibilityObserver } from '../utils/VisibilityObserver';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibility-observer\n * \t\t\t(onVisibilityChange)=\"doSomething($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibility-observer]' })\nexport class Visibility {\n\n  @HostBinding('class.visible') visible: boolean = false;\n\n  @Output() onVisibilityChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    new VisibilityObserver(\n      element.nativeElement,\n      this.visbilityChange.bind(this));\n  }\n\n  visbilityChange() {\n    this.visible = true;\n    this.onVisibilityChange.emit(true);\n  }\n\n}\n","import { columnsByPin } from './column';\n\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} property width to get\n */\nexport function columnTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for(let column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the Total Flex Grow\n * @param {array}\n */\nexport function getTotalFlexGrow(columns){\n  let totalFlexGrow = 0;\n\n  for (let c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {array} all columns\n * @param {int} width\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any){\n  let columnsWidth = columnTotalWidth(allColumns),\n      totalFlexGrow = getTotalFlexGrow(allColumns),\n      colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth){\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {array} colsByGroup\n * @param {int} maxWidth\n * @param {int} totalFlexGrow\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for(let attr in colsByGroup) {\n    for(let column of colsByGroup[attr]) {\n      if (!column.canAutoResize){\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  let hasMinWidth = {}\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    let widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for(let attr in colsByGroup) {\n      for(let column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]){\n          let newWidth = column.width  + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth){\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when nesc.\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proporation the widths given the min / max / noraml widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proporational widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the orginial width; not the newly proporatied widths.\n *\n * @param {array} allColumns\n * @param {int} expectedWidth\n */\nexport function forceFillColumnWidths(allColumns: any, expectedWidth: any, startIdx: any){\n  let contentWidth = 0,\n      columnsToResize = startIdx > -1 ?\n        allColumns.slice(startIdx, allColumns.length).filter((c) => { return c.canAutoResize }) :\n        allColumns.filter((c) => { return c.canAutoResize });\n\n  for(let column of allColumns) {\n    if(!column.canAutoResize){\n      contentWidth += column.width;\n    } else {\n      contentWidth += (column.$$oldWidth || column.width);\n    }\n  }\n\n  let remainingWidth = expectedWidth - contentWidth,\n      additionWidthPerColumn = remainingWidth / columnsToResize.length,\n      exceedsWindow = contentWidth > expectedWidth;\n\n  for(let column of columnsToResize) {\n    if(exceedsWindow) {\n      column.width = column.$$oldWidth || column.width;\n    } else {\n      if(!column.$$oldWidth){\n        column.$$oldWidth = column.width;\n      }\n\n      const newSize = column.$$oldWidth + additionWidthPerColumn;\n      if(column.minWith && newSize < column.minWidth) {\n        column.width = column.minWidth;\n      } else if(column.maxWidth && newSize > column.maxWidth) {\n        column.width = column.maxWidth;\n      } else {\n        column.width = newSize;\n      }\n    }\n  }\n}\n","export enum ColumnMode {\n  standard = 'standard' as any,\n  flex = 'flex' as any,\n  force = 'force' as any\n}\n","import { TableColumn } from './TableColumn';\nimport { Sort } from './Sort';\n\nimport { ColumnMode } from '../enums/ColumnMode';\nimport { SortType } from '../enums/SortType';\nimport { SelectionType } from '../enums/SelectionType';\n\nexport class TableOptions {\n\n  // Columns\n  columns: Array<TableColumn> = [];\n\n  // Enable vertical scrollbars\n  scrollbarV: boolean = false;\n\n  // Enable horz scrollbars\n  scrollbarH: boolean = false;\n\n  // The row height; which is necessary\n  // to calculate the height for the lazy rendering.\n  rowHeight: number = 30;\n\n  // flex\n  // force\n  // standard\n  columnMode: ColumnMode = ColumnMode.standard;\n\n  // Loading message presented when the array is undefined\n  loadingMessage: string = 'Loading...';\n\n  // Message to show when array is presented\n  // but contains no values\n  emptyMessage: string = 'No data to display';\n\n  // The minimum header height in pixels.\n  // pass falsey for no header\n  headerHeight: number|string = 30;\n\n  // The minimum footer height in pixels.\n  // pass falsey for no footer\n  footerHeight: number = 0;\n\n  // if external paging is turned on\n  externalPaging: boolean = false;\n\n  // Page size\n  limit: number = undefined;\n\n  // Total count\n  count: number = 0;\n\n  // Page offset\n  offset: number = 0;\n\n  // Loading indicator\n  loadingIndicator: boolean = false;\n\n  // Selections?\n  selectionType: SelectionType;\n\n  // if you can reorder columns\n  reorderable: boolean = true;\n\n  // type of sorting\n  sortType: SortType = SortType.single;\n\n  // sorts\n  sorts: Array<Sort> = [];\n\n  constructor(props: any) {\n    Object.assign(this, props);\n  }\n\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return (\"0000\" + (Math.random()*Math.pow(36,4) << 0).toString(36)).slice(-4);\n};","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param  {string} str \n * @return {string} camel case string\n */\nexport function camelCase(str) {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, \" \");\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n  // Lower case first character and some other stuff\n  str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase();\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function(a,b,c) {\n      return b.trim()+c.toUpperCase();\n  });\n  return str;\n};","import { id } from '../utils/id';\nimport { camelCase } from '../utils/camelCase';\n\n/**\n * Default Column Options\n * @type {object}\n */\nexport class TableColumn {\n\n  static getProps() {\n    let props = ['name', 'prop'];\n    let col = new TableColumn();\n\n    for(const prop in col) {\n      props.push(prop);\n    }\n\n    return props;\n  }\n\n  // unique id\n  $$id: string = id();\n\n  // defines if its expressive\n  isExpressive: boolean = false;\n\n  // pinned to the left\n  frozenLeft: boolean = false;\n\n  // pinned to the right\n  frozenRight: boolean = false;\n\n  // The grow factor relative to other columns. Same as the flex-grow\n  // API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n  // take any available extra width and distribute it proportionally\n  // according to all columns' flexGrow values.\n  flexGrow: number = 0;\n\n  // Minimum width of the column.\n  minWidth: number = 100;\n\n  // Maximum width of the column.\n  maxWidth: number = undefined;\n\n  // The width of the column; by default (in pixels).\n  width: number = 150;\n\n  // If yes then the column can be resized; otherwise it cannot.\n  resizeable: boolean = true;\n\n  // Custom sort comparator\n  comparator: any = undefined;\n\n  // If yes then the column can be sorted.\n  sortable: boolean = true;\n\n  // can column be dragged\n  draggable: boolean = true;\n\n  // Whether the column can automatically resize to fill space in the table.\n  canAutoResize: boolean = true;\n\n  // column name / label\n  name: string;\n\n  // property to bind to on the row\n  prop: string;\n\n  // ng2 template ref\n  template: any;\n\n  constructor(props?: any) {\n    Object.assign(this, props);\n\n    if(!this.prop && this.name) {\n      this.prop = camelCase(this.name);\n    }\n  }\n\n};\n","import {\n  Directive,\n  TemplateRef,\n  ContentChild\n} from '@angular/core';\n\nimport { TableColumn } from '../models/TableColumn';\n\n@Directive({\n  selector: 'datatable-column',\n  inputs: TableColumn.getProps()\n})\nexport class DataTableColumn {\n\n  @ContentChild(TemplateRef) template;\n\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  HostListener\n} from '@angular/core';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPress {\n\n  @Input() duration: number = 500;\n\n  @Output() onLongPress: EventEmitter<any> = new EventEmitter();\n  @Output() onLongPressing: EventEmitter<any> = new EventEmitter();\n  @Output() onLongPressEnd: EventEmitter<any> = new EventEmitter();\n\n  private pressing: boolean;\n  private longPressing: boolean;\n  private timeout: any;\n  private mouseX: number = 0;\n  private mouseY: number = 0;\n\n  @HostBinding('class.press')\n  get press() { return this.pressing; }\n\n  @HostBinding('class.longpress')\n  get longPress() { return this.longPressing; }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event) {\n    // don't do right/middle clicks\n    if(event.which !== 1) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.longPressing = false;\n\n    this.timeout = setTimeout(() => {\n      this.longPressing = true;\n      this.onLongPress.emit(event);\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMouseMove(event) {\n    if(this.pressing && !this.longPressing) {\n      const xThres = (event.clientX - this.mouseX) > 10;\n      const yThres = (event.clientY - this.mouseY) > 10;\n      if(xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event) {\n    if(this.longPressing) {\n      this.timeout = setTimeout(() => {\n        this.onLongPressing.emit(event);\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress() {\n    clearTimeout(this.timeout);\n    this.longPressing = false;\n    this.pressing = false;\n    this.onLongPressEnd.emit(true);\n  }\n\n  @HostListener('mouseup')\n  onMouseUp() { this.endPress(); }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n * \t https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n * \t http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class Draggable {\n\n  // this kinda a hack to get\n  // the model in the orderable\n  @Input() model: any;\n\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() onDragStart: EventEmitter<any> = new EventEmitter();\n  @Output() onDragging: EventEmitter<any> = new EventEmitter();\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\n\n  private dragging: boolean = false;\n  private subscription: any;\n  element: HTMLElement;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseup(event) {\n    this.dragging = false;\n    this.element.classList.remove('dragging');\n\n    if(this.subscription) {\n      this.subscription.unsubscribe();\n      this.onDragEnd.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event) {\n    if(event.target.classList.contains('draggable')) {\n      event.preventDefault();\n      this.dragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n      this.subscription = Observable.fromEvent(document, 'mousemove')\n        .subscribe((event) => this.move(event, mouseDownPos));\n\n      this.onDragStart.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n  move(event, mouseDownPos) {\n    if(!this.dragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if(this.dragX) this.element.style.left = `${x}px`;\n    if(this.dragY) this.element.style.top = `${y}px`;\n\n    if(this.dragX || this.dragY) {\n      this.element.classList.add('dragging');\n\n      this.onDragging.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class Resizeable {\n\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n  element: HTMLElement;\n  subcription: any;\n\n  @Output() onResize: EventEmitter<any> = new EventEmitter();\n\n  private prevScreenX: number = 0;\n  private resizing: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n\n    if(this.resizeEnabled) {\n      let node = document.createElement('span');\n      node.classList.add('resize-handle');\n      this.element.appendChild(node);\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseup(event) {\n    this.resizing = false;\n\n    if(this.subcription) {\n      this.subcription.unsubscribe();\n      this.onResize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event) {\n    const isHandle = event.target.classList.contains('resize-handle');\n\n    if(isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      this.subcription = Observable.fromEvent(document, 'mousemove')\n        .subscribe((e) => this.move(e));\n    }\n  }\n\n  move(event) {\n    const movementX = event.movementX || event.mozMovementX || (event.screenX - this.prevScreenX);\n    const width = this.element.clientWidth;\n    const newWidth = width + (movementX || 0);\n\n    this.prevScreenX = event.screenX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if(overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList\n} from '@angular/core';\n\nimport { Draggable } from './Draggable';\n\n@Directive({ selector: '[orderable]' })\nexport class Orderable {\n\n  @Output() onReorder: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(Draggable)\n  private drags: QueryList<Draggable>;\n\n  private positions: any;\n\n  ngAfterContentInit() {\n    this.drags.forEach(d =>\n      d.onDragStart.subscribe(this.onDragStart.bind(this)) &&\n      d.onDragEnd.subscribe(this.onDragEnd.bind(this)));\n  }\n\n  onDragStart() {\n    this.positions = {};\n\n    let i = 0;\n    for(let dragger of this.drags.toArray()) {\n      let elm = dragger.element;\n      this.positions[dragger.model.prop] =  {\n        left: parseInt(elm.offsetLeft.toString()),\n        index: i++\n      };\n    }\n  }\n\n  onDragEnd({ element, model }) {\n    const newPos = parseInt(element.offsetLeft.toString());\n    const prevPos = this.positions[model.prop];\n\n    let i = 0;\n    for(let prop in this.positions) {\n      let pos = this.positions[prop];\n\n      let movedLeft = newPos < pos.left && prevPos.left > pos.left;\n      let movedRight = newPos > pos.left && prevPos.left < pos.left;\n\n      if(movedLeft || movedRight) {\n        this.onReorder.emit({\n          prevIndex: prevPos.index,\n          newIndex: i,\n          model\n        });\n      }\n\n      i++;\n    }\n\n    element.style.left = 'auto';\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\nimport { TableColumn } from '../../models/TableColumn';\nimport { SortDirection } from '../../enums/SortDirection';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n\t <div>\n      <span\n        class=\"datatable-header-cell-label draggable\"\n        (click)=\"onSort()\"\n        [innerHTML]=\"model.name\">\n      </span>\n      <span\n        class=\"sort-btn\"\n        [ngClass]=\"sortClasses()\">\n      </span>\n    </div>\n  `,\n  host: {\n    '[class.sortable]': 'model.sortable',\n    '[class.resizable]': 'model.resizable',\n    '[style.width]': 'model.width + \"px\"',\n    '[style.minWidth]': 'model.minWidth + \"px\"',\n    '[style.maxWidth]': 'model.maxWidth + \"px\"',\n    '[style.height]': 'model.height + \"px\"',\n    '[attr.title]': 'model.name'\n  }\n})\nexport class DataTableHeaderCell {\n\n  @Input() model: TableColumn;\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  get sortDir() {\n    let sort = this.state.options.sorts.find(s => {\n      return s.prop === this.model.prop;\n    });\n\n    if(sort) return sort.dir;\n  }\n\n  sortClasses(sort) {\n    let dir = this.sortDir;\n    return {\n      'sort-asc icon-down': dir === SortDirection.asc,\n      'sort-desc icon-up': dir === SortDirection.desc\n    };\n  }\n\n  onSort() {\n    if(this.model.sortable) {\n      this.state.nextSort(this.model);\n\n      this.onColumnChange.emit({\n        type: 'sort',\n        value: this.model\n      });\n    }\n  }\n\n  constructor(public element: ElementRef, private state: StateService){\n    element.nativeElement.classList.add('datatable-header-cell');\n  }\n\n}\n","import {\n  Component,\n  Output,\n  ElementRef,\n  EventEmitter\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\n\nimport { LongPress } from '../../directives/LongPress';\nimport { Draggable } from '../../directives/Draggable';\nimport { Resizeable } from '../../directives/Resizeable';\nimport { Orderable } from '../../directives/Orderable';\n\nimport { DataTableHeaderCell } from './HeaderCell';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n  \t<div\n      [style.width]=\"state.columnGroupWidths.total\"\n      [style.left]=\"-state.HScrollPos + 'px'\"\n      class=\"datatable-header-inner\"\n      orderable\n      (onReorder)=\"columnReordered($event)\">\n      <div\n        class=\"datatable-row-left\"\n        [style.width]=\"state.columnGroupWidths.left + 'px'\"\n        *ngIf=\"state.columnsByPin.left.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.left\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (onResize)=\"columnResized($event, column)\"\n          long-press\n          (onLongPress)=\"drag = true\"\n          (onLongPressEnd)=\"drag = false\"\n          draggable\n          [dragX]=\"column.draggable && drag\"\n          [dragY]=\"false\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n      <div\n        class=\"datatable-row-center\"\n        [style.width]=\"state.columnGroupWidths.center + 'px'\"\n        *ngIf=\"state.columnsByPin.center.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.center\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (onResize)=\"columnResized($event, column)\"\n          long-press\n          (onLongPress)=\"drag = true\"\n          (onLongPressEnd)=\"drag = false\"\n          draggable\n          [dragX]=\"column.draggable && drag\"\n          [dragY]=\"false\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n      <div\n        class=\"datatable-row-right\"\n        [style.width]=\"state.columnGroupWidths.right + 'px'\"\n        *ngIf=\"state.columnsByPin.right.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.right\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (onResize)=\"columnResized($event, column)\"\n          long-press\n          (onLongPress)=\"drag = true\"\n          (onLongPressEnd)=\"drag = false\"\n          draggable\n          [dragX]=\"column.draggable && drag\"\n          [dragY]=\"false\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  directives: [\n    DataTableHeaderCell,\n    Draggable,\n    Resizeable,\n    Orderable,\n    LongPress\n  ],\n  host: {\n    '[style.width]': 'headerWidth',\n    '[style.height]': 'headerHeight'\n  }\n})\nexport class DataTableHeader {\n\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  get headerWidth() {\n    if(this.state.options.scrollbarH)\n      return this.state.innerWidth + 'px';\n\n    return '100%';\n  }\n\n  get headerHeight() {\n    let height = this.state.options.headerHeight;\n    if(height !== 'auto') return `${height}px`;\n    return height;\n  }\n\n  constructor(private state: StateService, elm: ElementRef){\n    elm.nativeElement.classList.add('datatable-header');\n  }\n\n  columnResized(width, column) {\n    if (width <= column.minWidth){\n      width = column.minWidth;\n    } else if(width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    column.width = width;\n\n    this.onColumnChange.emit({\n      type: 'resize',\n      value: column\n    });\n  }\n\n  columnReordered({ prevIndex, newIndex, model }) {\n    this.state.options.columns.splice(prevIndex, 1);\n    this.state.options.columns.splice(newIndex, 0, model);\n\n    this.onColumnChange.emit({\n      type: 'reorder',\n      value: model\n    });\n  }\n\n}\n","export enum SelectionType {\n  single = 'single' as any,\n  multi = 'multi' as any,\n  multiShift = 'multiShift' as any\n}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27\n}\n","export function selectRows(selected, row) {\n  const selectedIndex = selected.indexOf(row);\n\n  if(selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(selected, rows, index, prevIndex) {\n  const reverse = index < prevIndex;\n\n  for(let i = 0, len = rows.length; i < len; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: (prevIndex - index)\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if((reverse && lesser) || (!reverse && greater)) {\n      const idx = selected.indexOf(row);\n\n      // if reverse shift selection (unselect) and the\n      // row is already selected, remove it from selected\n      if (reverse && idx > -1) {\n        selected.splice(idx, 1);\n        continue;\n      }\n\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if( i >= range.start && i < range.end) {\n        if (idx === -1) {\n          selected.push(row);\n        }\n      }\n    }\n  }\n\n  return selected;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div\n      class=\"progress-linear\"\n      role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `\n})\nexport class ProgressBar {}\n","/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {object} obj\n * @param {string} path\n */\nexport function deepValueGetter(obj, path) {\n  if(!obj || !path) return obj;\n\n  let current = obj;\n  let split = path.split('.');\n\n  if(split.length) {\n    for(let i = 0, len = split.length; i < len; i++) {\n      current = current[split[i]];\n    }\n  }\n\n  return current;\n};\n","import {\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  Input,\n  EmbeddedViewRef,\n  SimpleChange\n} from \"@angular/core\";\n\n@Directive({ selector: '[templateWrapper]' })\nexport class TemplateWrapper {\n\n  private embeddedViewRef: EmbeddedViewRef<any>;\n\n  @Input() templateWrapper: TemplateRef<any>;\n  @Input() value: any;\n  @Input() row: any;\n  @Input() column: any;\n\n  constructor(private viewContainer: ViewContainerRef) { }\n\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (changes['templateWrapper']) {\n      if (this.embeddedViewRef) {\n        this.embeddedViewRef.destroy();\n      }\n\n      this.embeddedViewRef = this.viewContainer.createEmbeddedView(\n        this.templateWrapper, {\n          value: this.value,\n          row: this.row,\n          column: this.column\n        });\n    }\n\n    if (this.embeddedViewRef) {\n      this.embeddedViewRef.context.value = this.value;\n      this.embeddedViewRef.context.row = this.row;\n      this.embeddedViewRef.context.column = this.column;\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  ComponentResolver\n} from '@angular/core';\nimport { TableColumn } from '../../models/TableColumn';\nimport { DataTableColumn } from '../DataTableColumn';\nimport { deepValueGetter } from '../../utils/deepGetter';\nimport { TemplateWrapper } from '../../directives/TemplateWrapper';\n\n@Component({\n  selector: 'datatable-body-cell',\n  template: `\n  \t<div class=\"datatable-body-cell-label\">\n      <span\n        *ngIf=\"!column.template\"\n        [innerHTML]=\"value\">\n      </span>\n      <template\n        *ngIf=\"column.template\"\n        [value]=\"value\"\n        [row]=\"row\"\n        [column]=\"column\"\n        [templateWrapper]=\"column.template\">\n      </template>\n    </div>\n  `,\n  host: {\n    '[style.width]': 'column.width + \"px\"',\n    '[style.height]': 'column.height + \"px\"'\n  },\n  directives: [ TemplateWrapper ]\n})\nexport class DataTableBodyCell {\n\n  @Input() column: TableColumn;\n  @Input() row: any;\n\n  get value() {\n    if(!this.row) return '';\n    return deepValueGetter(this.row, this.column.prop);\n  }\n\n  constructor(\n    private elm: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private componentResolver: ComponentResolver) {\n\n    elm.nativeElement.classList.add('datatable-body-cell');\n  }\n\n}\n","import { Component, Input, ElementRef } from '@angular/core';\nimport { StateService } from '../../services/State';\nimport { DataTableBodyCell } from './BodyCell';\n\n@Component({\n  selector: 'datatable-body-row',\n  template: `\n  \t<div>\n      <div\n        class=\"datatable-row-left\"\n        *ngIf=\"state.columnsByPin.left.length\"\n        [style.width]=\"state.columnGroupWidths.left + 'px'\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.left\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n      <div\n        class=\"datatable-row-center\"\n        [style.width]=\"state.columnGroupWidths.center + 'px'\"\n        *ngIf=\"state.columnsByPin.center.length\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.center\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n      <div\n        class=\"datatable-row-right\"\n        *ngIf=\"state.columnsByPin.right.length\"\n        [style.width]=\"state.columnGroupWidths.right + 'px'\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.right\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n    </div>\n  `,\n  directives: [ DataTableBodyCell ],\n  host: {\n    '[class.active]': 'isSelected'\n  }\n})\nexport class DataTableBodyRow {\n\n  @Input() row: any;\n\n  get isSelected() {\n    return this.state.selected &&\n      this.state.selected.indexOf(this.row) > -1;\n  }\n\n  constructor(private state: StateService, elm: ElementRef) {\n    elm.nativeElement.classList.add('datatable-body-row');\n  }\n\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[scroller]',\n  host: {\n    '[style.height]': 'scrollHeight',\n    '[style.width]': 'scrollWidth + \"px\"'\n  }\n})\nexport class Scroller {\n\n  @Input() rowHeight: number;\n  @Input() count: number;\n  @Input() scrollWidth: number;\n\n  get scrollHeight() {\n    return (this.count * this.rowHeight) + 'px';\n  }\n\n  constructor(elm: ElementRef){\n    elm.nativeElement.classList.add('scroller');\n  }\n\n}\n","import { Component, ElementRef, Output, EventEmitter } from '@angular/core';\n\nimport { StateService } from '../../services/State';\nimport { SelectionType } from '../../enums/SelectionType';\nimport { Keys } from '../../utils/keys';\nimport { selectRows, selectRowsBetween } from '../../utils/selection';\n\nimport { ProgressBar } from './ProgressBar';\nimport { DataTableBodyRow } from './BodyRow';\nimport { Scroller } from '../../directives/Scroller';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <div>\n      <datatable-progress\n        [hidden]=\"!state.options.loadingIndicator\">\n      </datatable-progress>\n      <div\n        scroller\n        *ngIf=\"state.rows.length\"\n        [rowHeight]=\"state.options.rowHeight\"\n        [count]=\"state.rowCount\"\n        [scrollWidth]=\"state.columnGroupWidths.total\">\n        <datatable-body-row\n          *ngFor=\"let row of rows; let i = index;\"\n          [attr.tabindex]=\"i\"\n          (click)=\"rowClicked($event, i, row)\"\n          (keydown)=\"rowKeydown($event, i, row)\"\n          [row]=\"row\">\n        </datatable-body-row>\n      </div>\n      <div\n        class=\"empty-row\"\n        *ngIf=\"!rows.length\"\n        [innerHTML]=\"state.options.emptyMessage\">\n      </div>\n    </div>\n  `,\n  directives: [\n    ProgressBar,\n    DataTableBodyRow,\n    Scroller\n  ],\n  host: {\n    '[style.width]': 'bodyWidth',\n    '[style.height]': 'bodyHeight',\n    '(scroll)': 'onScroll($event)',\n  }\n})\nexport class DataTableBody {\n\n  @Output() onRowClick: EventEmitter<any> = new EventEmitter();\n  @Output() onRowSelect: EventEmitter<any> = new EventEmitter();\n\n  private prevIndex: number;\n  private rows: any;\n\n  get selectEnabled() {\n    return this.state.options.selectionType !== undefined;\n  }\n\n  get bodyHeight() {\n    if(this.state.options.scrollbarV)\n      return this.state.bodyHeight + 'px';\n    return 'auto';\n  }\n\n  get bodyWidth() {\n    if(this.state.options.scrollbarH)\n      return this.state.innerWidth + 'px';\n    return '100%';\n  }\n\n  constructor(private state: StateService, elm: ElementRef) {\n    elm.nativeElement.classList.add('datatable-body');\n  }\n\n  ngOnInit() {\n    this.rows = [...this.state.rows];\n\n    this.state.onPageChange.subscribe(page => {\n      const { first, last } = this.state.indexes;\n      this.rows = this.state.rows.slice(first, last);\n      this.hideIndicator();\n    });\n\n    this.state.onRowsUpdate.subscribe(rows => {\n      const { first, last } = this.state.indexes;\n      this.rows = rows.slice(first, last);\n      this.hideIndicator();\n    });\n  }\n\n  hideIndicator() {\n    setTimeout(() => {\n      this.state.options.loadingIndicator = false;\n    }, 500);\n  }\n\n  rowClicked(event, index, row) {\n    this.onRowClick.emit({ event, row });\n    this.selectRow(event, index, row);\n  }\n\n onScroll(event) {\n    if(this.state.options.scrollbarH){\n      this.state.HScrollPos = event.target.scrollLeft;\n    }\n  }\n\n  rowKeydown(event, index, row) {\n    if(event.keyCode === Keys.return && this.selectEnabled) {\n      this.selectRow(event, index, row);\n    } else if(event.keyCode === Keys.up || event.keyCode === Keys.down) {\n      let dom = event.keyCode === Keys.up ?\n        event.target.previousElementSibling :\n        event.target.nextElementSibling;\n      if(dom) dom.focus();\n    }\n  }\n\n  selectRow(event, index, row) {\n    if(!this.selectEnabled) return;\n\n    const multiShift = this.state.options.selectionType === SelectionType.multiShift;\n    const multiClick = this.state.options.selectionType === SelectionType.multi;\n\n    let selections = [];\n    if(multiShift || multiClick) {\n      if(multiShift && event.shiftKey) {\n        let selected = [...this.state.selected];\n        selections = selectRowsBetween(selected, this.rows, index, this.prevIndex);\n      } else if(multiShift && !event.shiftKey) {\n        selections.push(row);\n      } else {\n        let selected = [...this.state.selected];\n        selections = selectRows(selected, row);\n      }\n    } else {\n      selections.push(row);\n    }\n\n    this.prevIndex = index;\n    this.onRowSelect.emit(selections);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(1)\"\n          class=\"icon-prev\">\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"prevPage()\"\n          class=\"icon-left\">\n        </a>\n      </li>\n      <li\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"nextPage()\"\n          class=\"icon-right\">\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(totalPages)\"\n          class=\"icon-skip\">\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class DataTablePager {\n\n  @Input() size: number = 0;\n  @Output() onPaged: EventEmitter<any> = new EventEmitter();\n\n  private _count: number;\n  private _page: number;\n  private pages: any;\n\n  get totalPages() {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Input()\n  set count(val) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  @Input()\n  set page(val) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  constructor(elm: ElementRef) {\n    elm.nativeElement.classList.add('datatable-pager');\n  }\n\n  canPrevious() {\n    return this.page > 1;\n  }\n\n  canNext() {\n    return this.page < this.totalPages;\n  }\n\n  prevPage() {\n    if (this.page > 1) {\n      this.selectPage(--this.page);\n    }\n  }\n\n  nextPage() {\n    this.selectPage(++this.page);\n  }\n\n  selectPage(page: number) {\n    if (page > 0 && page <= this.totalPages) {\n      this.page = page;\n      this.onPaged.emit(page);\n    }\n  }\n\n  calcPages(page?: number) {\n    let pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    let maxSize = 5;\n    let isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = ((Math.ceil(page / maxSize) - 1) * maxSize) + 1;\n      endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: num\n      });\n    }\n\n    return pages;\n  }\n\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\nimport { DataTablePager } from './Pager';\n\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      *ngIf=\"state.options.footerHeight\"\n      [style.height]=\"state.options.footerHeight\">\n      <div class=\"page-count\">{{state.pageCount}} total</div>\n      <datatable-pager\n        [page]=\"curPage\"\n        [size]=\"state.pageSize\"\n        (onPaged)=\"onPageChange.emit($event)\"\n        [count]=\"state.pageCount\"\n        [hidden]=\"!visible\">\n       </datatable-pager>\n     </div>\n  `,\n  directives: [ DataTablePager ]\n})\nexport class DataTableFooter {\n\n  @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n\n  get visible() {\n    return (this.state.pageCount / this.state.pageSize) > 1;\n  }\n\n  get curPage() {\n    return this.state.options.offset + 1;\n  }\n\n  constructor(elm: ElementRef, private state: StateService) {\n    elm.nativeElement.classList.add('datatable-footer');\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  KeyValueDiffers,\n  ContentChildren\n} from '@angular/core';\n\nimport { StateService } from '../services/State';\nimport { Visibility } from '../directives/Visibility';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\n\nimport { ColumnMode } from '../enums/ColumnMode';\nimport { TableOptions } from '../models/TableOptions';\nimport { TableColumn } from '../models/TableColumn';\n\nimport { DataTableColumn } from './DataTableColumn';\nimport { DataTableHeader } from './header/Header';\nimport { DataTableBody } from './body/Body';\nimport { DataTableFooter } from './footer/Footer';\nimport './datatable.scss';\n\n@Component({\n  selector: 'datatable',\n  template: `\n  \t<div\n      visibility-observer\n      (onVisibilityChange)=\"adjustSizes()\">\n      <datatable-header\n        (onColumnChange)=\"onColumnChange.emit($event)\">\n      </datatable-header>\n      <datatable-body\n        (onRowClick)=\"onRowClick.emit($event)\"\n        (onRowSelect)=\"onRowSelect($event)\">\n      </datatable-body>\n      <datatable-footer\n        (onPageChange)=\"onPageChanged($event)\">\n      </datatable-footer>\n    </div>\n  `,\n  directives: [\n    DataTableHeader,\n    DataTableBody,\n    DataTableFooter,\n    Visibility\n  ],\n  host: {\n    '[class.fixed-header]': 'options.headerHeight !== \"auto\"',\n    '[class.fixed-row]': 'options.rowHeight !== \"auto\"',\n    '[class.scroll-vertical]': 'options.scrollbarV',\n    '[class.scroll-horz]': 'options.scrollbarH',\n    '[class.selectable]': 'options.selectable',\n    '[class.checkboxable]': 'options.checkboxable'\n  },\n  providers: [ StateService ]\n})\nexport class DataTable {\n\n\t@Input() options: TableOptions;\n  @Input() rows: Array<any>;\n\t@Input() selected: Array<any>;\n\n  @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n  @Output() onRowsUpdate: EventEmitter<any> = new EventEmitter();\n  @Output() onRowClick: EventEmitter<any> = new EventEmitter();\n  @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DataTableColumn) columns;\n\n  private element: HTMLElement;\n  private rowDiffer: any;\n  private colDiffer: any;\n\n  constructor(element: ElementRef, private state: StateService, differs: KeyValueDiffers) {\n    this.element = element.nativeElement;\n    this.element.classList.add('datatable');\n    this.rowDiffer = differs.find({}).create(null);\n    this.colDiffer = differs.find({}).create(null);\n  }\n\n  ngOnInit() {\n    let { options, rows, selected } = this;\n\n    this.state\n      .setOptions(options)\n      .setRows(rows)\n      .setSelected(selected);\n  }\n\n  ngAfterViewInit() {\n    this.adjustColumns();\n\n    setTimeout(() => {\n      for(let col of this.columns.toArray()) {\n        this.options.columns.push(new TableColumn(col));\n      }\n    });\n  }\n\n  ngDoCheck() {\n    if(this.rowDiffer.diff(this.rows)) {\n      this.state.setRows(this.rows);\n      this.onRowsUpdate.emit(this.rows);\n    }\n\n    this.checkColumnToggles();\n  }\n\n  checkColumnToggles() {\n    let colDiff = this.colDiffer.diff(this.options.columns);\n    if(colDiff) {\n      let chngd = false;\n      colDiff.forEachAddedItem(c => {\n        chngd = true;\n        return false;\n      });\n\n      if(!chngd) {\n        colDiff.forEachRemovedItem(c => {\n          chngd = true;\n          return false;\n        });\n      }\n\n      // if a column was added or removed\n      // we need to re-adjust columns\n      if(chngd) this.adjustColumns();\n    }\n  }\n\n  adjustSizes() {\n    let { height, width } = this.element.getBoundingClientRect();\n    this.state.innerWidth = Math.floor(width);\n\n    if (this.options.scrollbarV) {\n      if (this.options.headerHeight) height =- this.options.headerHeight;\n      if (this.options.footerHeight) height =- this.options.footerHeight;\n      this.state.bodyHeight = height;\n    }\n\n    this.adjustColumns();\n  }\n\n  @HostListener('window:resize')\n  resize() { this.adjustSizes(); }\n\n  adjustColumns(forceIdx?: number) {\n    if(!this.options.columns) return;\n\n    let width = this.state.innerWidth;\n    if(this.options.scrollbarV) {\n      // width =- this.state.scrollbarWidth;\n      width = width - this.state.scrollbarWidth;\n    }\n\n    if(this.options.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(this.options.columns, width, forceIdx);\n    } else if(this.options.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(this.options.columns, width);\n    }\n  }\n\n  onPageChanged(event) {\n    this.state.setPage(event);\n    this.onPageChange.emit(event);\n  }\n\n  onRowSelect(event) {\n    this.state.setSelected(event);\n    this.onSelectionChange.emit(event);\n  }\n\n}\n","// Components\nimport { DataTable } from './components/DataTable';\nimport { DataTableColumn } from './components/DataTableColumn';\n\n// Models\nimport { TableOptions } from './models/TableOptions';\nimport { TableColumn } from './models/TableColumn';\nimport { Sort } from './models/Sort';\n\n// Types\nimport { SelectionType } from './enums/SelectionType';\nimport { ColumnMode } from './enums/ColumnMode';\nimport { SortDirection } from './enums/SortDirection';\nimport { SortType } from './enums/SortType';\n\nconst DATATABLE_COMPONENTS = [\n  DataTable,\n  DataTableColumn\n];\n\nexport {\n  DataTable,\n  TableOptions,\n  TableColumn,\n  Sort,\n  SelectionType,\n  ColumnMode,\n  SortDirection,\n  SortType,\n  DATATABLE_COMPONENTS\n};\n"],"names":["SortType","SortDirection","EventEmitter","Injectable","HostBinding","Output","Directive","columnTotalWidth","ColumnMode","ContentChild","TemplateRef","Input","HostListener","Observable","ContentChildren","Component","SelectionType"],"mappings":"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"}