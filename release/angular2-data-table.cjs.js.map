{"version":3,"file":null,"sources":["../src/utils/column.ts","../src/utils/math.ts","../src/enums/ColumnMode.ts","../src/enums/SortType.ts","../src/models/TableOptions.ts","../src/utils/id.ts","../src/utils/camelCase.ts","../src/models/TableColumn.ts","../src/components/DataTableColumn.ts","../src/utils/scrollbarWidth.ts","../src/enums/SortDirection.ts","../src/utils/sort.ts","../src/models/Sort.ts","../src/services/State.ts","../src/components/DataTable.ts","../src/utils/prefixes.ts","../src/utils/translate.ts","../src/components/header/Header.ts","../src/utils/keys.ts","../src/utils/selection.ts","../src/enums/SelectionType.ts","../src/directives/Scroller.ts","../src/components/body/Body.ts","../src/components/footer/Footer.ts","../src/components/header/HeaderCell.ts","../src/components/footer/Pager.ts","../src/components/body/BodyRow.ts","../src/components/body/ProgressBar.ts","../src/utils/deepGetter.ts","../src/components/body/BodyCell.ts","../src/utils/VisibilityObserver.ts","../src/directives/Visibility.ts","../src/directives/LongPress.ts","../src/directives/Resizeable.ts","../src/directives/Draggable.ts","../src/directives/Orderable.ts","../src/directives/TemplateWrapper.ts","../src/angular2-data-table.ts"],"sourcesContent":["/**\n * Returns the columns by pin.\n * @param {array} cols\n */\nexport function columnsByPin(cols) {\n  let ret = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if(cols) {\n    for(let col of cols) {\n      if(col.frozenLeft) {\n        ret.left.push(col);\n      } else if(col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n * @param {object} groups\n * @param {array} all\n */\nexport function columnGroupWidths(groups, all) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: columnTotalWidth(all)\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} prop width to get\n */\nexport function columnTotalWidth(columns, prop?) {\n  let totalWidth = 0;\n\n  if(columns) {\n    for(let c of columns) {\n      let has = prop && c[prop];\n      totalWidth = totalWidth + (has ? c[prop] : c.width);\n    }\n  }\n\n  return totalWidth;\n}\n","import { columnsByPin } from './column';\n\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} property width to get\n */\nexport function columnTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for(let column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the Total Flex Grow\n * @param {array}\n */\nexport function getTotalFlexGrow(columns) {\n  let totalFlexGrow = 0;\n\n  for (let c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {array} all columns\n * @param {int} width\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  let columnsWidth = columnTotalWidth(allColumns);\n  let totalFlexGrow = getTotalFlexGrow(allColumns);\n  let colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {array} colsByGroup\n * @param {int} maxWidth\n * @param {int} totalFlexGrow\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for(let attr in colsByGroup) {\n    for(let column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  let hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    let widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for(let attr in colsByGroup) {\n      for(let column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          let newWidth = column.width  + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when nesc.\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proporation the widths given the min / max / noraml widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proporational widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the orginial width; not the newly proporatied widths.\n *\n * @param {array} allColumns\n * @param {int} expectedWidth\n */\nexport function forceFillColumnWidths(allColumns: any, expectedWidth: any, startIdx: any) {\n  let contentWidth = 0;\n\n  let columnsToResize = startIdx > -1 ?\n    allColumns.slice(startIdx, allColumns.length).filter((c) => { return c.canAutoResize; }) :\n    allColumns.filter((c) => { return c.canAutoResize; });\n\n  for(let column of allColumns) {\n    if(!column.canAutoResize) {\n      contentWidth += column.width;\n    } else {\n      contentWidth += (column.$$oldWidth || column.width);\n    }\n  }\n\n  let remainingWidth = expectedWidth - contentWidth;\n  let additionWidthPerColumn = remainingWidth / columnsToResize.length;\n  let exceedsWindow = contentWidth > expectedWidth;\n\n  for(let column of columnsToResize) {\n    if(exceedsWindow) {\n      column.width = column.$$oldWidth || column.width;\n    } else {\n      if(!column.$$oldWidth) {\n        column.$$oldWidth = column.width;\n      }\n\n      const newSize = column.$$oldWidth + additionWidthPerColumn;\n      if(column.minWith && newSize < column.minWidth) {\n        column.width = column.minWidth;\n      } else if(column.maxWidth && newSize > column.maxWidth) {\n        column.width = column.maxWidth;\n      } else {\n        column.width = newSize;\n      }\n    }\n  }\n}\n","export enum ColumnMode {\n  standard = 'standard' as any,\n  flex = 'flex' as any,\n  force = 'force' as any\n}\n","export enum SortType {\n  single = 'single' as any,\n  multi = 'multi' as any\n}\n","import { TableColumn } from './TableColumn';\nimport { Sort } from './Sort';\nimport { ColumnMode } from '../enums/ColumnMode';\nimport { SortType } from '../enums/SortType';\nimport { SelectionType } from '../enums/SelectionType';\n\nexport class TableOptions {\n\n  // Columns\n  columns: TableColumn[] = [];\n\n  // Enable vertical scrollbars\n  scrollbarV: boolean = false;\n\n  // Enable horz scrollbars\n  scrollbarH: boolean = false;\n\n  // The row height; which is necessary\n  // to calculate the height for the lazy rendering.\n  rowHeight: number = 30;\n\n  // flex\n  // force\n  // standard\n  columnMode: ColumnMode = ColumnMode.standard;\n\n  // Loading message presented when the array is undefined\n  loadingMessage: string = 'Loading...';\n\n  // Message to show when array is presented\n  // but contains no values\n  emptyMessage: string = 'No data to display';\n\n  // The minimum header height in pixels.\n  // pass falsey for no header\n  // note: number|string does not work right\n  headerHeight: any = 30;\n\n  // The minimum footer height in pixels.\n  // pass falsey for no footer\n  footerHeight: number = 0;\n\n  // if external paging is turned on\n  externalPaging: boolean = false;\n\n  // Page size\n  limit: number = undefined;\n\n  // Total count\n  count: number = 0;\n\n  // Page offset\n  offset: number = 0;\n\n  // Loading indicator\n  loadingIndicator: boolean = false;\n\n  // Selections?\n  selectionType: SelectionType;\n\n  // if you can reorder columns\n  reorderable: boolean = true;\n\n  // type of sorting\n  sortType: SortType = SortType.single;\n\n  // sorts\n  sorts: Array<Sort> = [];\n\n  constructor(props: any) {\n    Object.assign(this, props);\n  }\n\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param  {string} str\n * @return {string} camel case string\n */\nexport function camelCase(str) {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function(a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n","import { PipeTransform } from '@angular/core';\nimport { id } from '../utils/id';\nimport { camelCase } from '../utils/camelCase';\n\n/**\n * Default Column Options\n * @type {object}\n */\nexport class TableColumn {\n\n  static getProps() {\n    let props = ['name', 'prop'];\n    let col = new TableColumn();\n\n    for(const prop in col) {\n      props.push(prop);\n    }\n\n    return props;\n  }\n\n  // unique id\n  $$id: string = id();\n\n  // defines if its expressive\n  isExpressive: boolean = false;\n\n  // pinned to the left\n  frozenLeft: boolean = false;\n\n  // pinned to the right\n  frozenRight: boolean = false;\n\n  // The grow factor relative to other columns. Same as the flex-grow\n  // API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n  // take any available extra width and distribute it proportionally\n  // according to all columns' flexGrow values.\n  flexGrow: number = 0;\n\n  // Minimum width of the column.\n  minWidth: number = 0;\n\n  // Maximum width of the column.\n  maxWidth: number = undefined;\n\n  // The width of the column; by default (in pixels).\n  width: number = 150;\n\n  // If yes then the column can be resized; otherwise it cannot.\n  resizeable: boolean = true;\n\n  // Custom sort comparator\n  comparator: any = undefined;\n\n  // Custom pipe\n  pipe: PipeTransform = null;\n\n  // If yes then the column can be sorted.\n  sortable: boolean = true;\n\n  // can column be dragged\n  draggable: boolean = true;\n\n  // Whether the column can automatically resize to fill space in the table.\n  canAutoResize: boolean = true;\n\n  // column name / label\n  name: string;\n\n  // property to bind to on the row\n  prop: string;\n\n  // ng2 template ref\n  template: any;\n\n  // ng2 template ref\n  headerTemplate: any;\n\n  constructor(props?: any) {\n    Object.assign(this, props);\n\n    if(!this.prop && this.name) {\n      this.prop = camelCase(this.name);\n    }\n  }\n\n}\n","import { Directive, TemplateRef, ContentChild, QueryList } from '@angular/core';\nimport { TableColumn } from '../models/TableColumn';\n\n@Directive({\n  selector: 'datatable-column',\n  inputs: TableColumn.getProps()\n})\nexport class DataTableColumn {\n\n  @ContentChild(TemplateRef) template: QueryList<TemplateRef<any>>;\n\n}\n","/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n * @return {int} width\n */\nexport function scrollbarWidth() {\n  let outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.msOverflowStyle = 'scrollbar';\n  document.body.appendChild(outer);\n\n  let widthNoScroll = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  let inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  let widthWithScroll = inner.offsetWidth;\n  outer.parentNode.removeChild(outer);\n\n  return widthNoScroll - widthWithScroll;\n};\n","export enum SortDirection {\n  asc = 'asc' as any,\n  desc = 'desc' as any\n}\n","import { Sort } from '../models/Sort';\nimport { SortType } from '../enums/SortType';\nimport { SortDirection } from '../enums/SortDirection';\n\n/**\n * Gets the next sort direction\n * @param  {SortType}      sortType\n * @param  {SortDirection} currentSort\n * @return {SortDirection}\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection {\n  if (sortType === SortType.single) {\n    if(current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if(!current) {\n      return SortDirection.asc;\n    } else if(current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if(current === SortDirection.desc) {\n      return undefined;\n    }\n  }\n};\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param  {any}    a\n * @param  {any}    b\n * @return {number} position\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n\n  if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * Sorts the rows\n * @param  {Array<any>}  rows\n * @param  {Array<Sort>} dirs\n * @return {Array<any>} results\n */\nexport function sortRows(rows: Array<any>, dirs: Array<Sort>) {\n  let temp = [...rows];\n\n  return temp.sort(function(a: any, b: any) {\n    for(const { prop, dir } of dirs) {\n      const comparison = dir !== SortDirection.desc ?\n        orderByComparator(a[prop], b[prop]) :\n        -orderByComparator(a[prop], b[prop]);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    // equal each other\n    return 0;\n  });\n}\n","import { SortDirection } from '../enums/SortDirection';\n\nexport class Sort {\n\n  prop: string;\n\n  dir: SortDirection;\n\n  constructor(props: any) {\n    Object.assign(this, props);\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { columnsByPin, columnGroupWidths } from '../utils/column';\nimport { scrollbarWidth } from '../utils/scrollbarWidth';\nimport { nextSortDir, sortRows } from '../utils/sort';\n\nimport { TableOptions } from '../models/TableOptions';\nimport { TableColumn } from '../models/TableColumn';\nimport { Sort } from '../models/Sort';\nimport { SortType } from '../enums/SortType';\n\n@Injectable()\nexport class StateService {\n\n  options: TableOptions;\n  rows: Array<any>;\n  selected: Array<any>;\n\n  onSelectionChange: EventEmitter<any> = new EventEmitter();\n  onRowsUpdate: EventEmitter<any> = new EventEmitter();\n  onPageChange: EventEmitter<any> = new EventEmitter();\n\n  scrollbarWidth: number = scrollbarWidth();\n  offsetX: number = 0;\n  offsetY: number = 0;\n  innerWidth: number = 0;\n  bodyHeight: number = 300;\n\n  get columnsByPin() {\n    return columnsByPin(this.options.columns);\n  }\n\n  get columnGroupWidths() {\n    return columnGroupWidths(this.columnsByPin, this.options.columns);\n  }\n\n  get rowCount() {\n    if (!this.options.externalPaging) {\n      return this.rows.length;\n    } else {\n      return this.options.count;\n    }\n  }\n\n  get pageSize() {\n    if (this.options.scrollbarV) {\n      return Math.ceil(this.bodyHeight / this.options.rowHeight) + 1;\n    } else if (this.options.limit) {\n      return this.options.limit;\n    } else {\n      return this.rows.length;\n    }\n  }\n\n  get indexes() {\n    let first = 0;\n    let last = 0;\n\n    if (this.options.scrollbarV) {\n      const floor = Math.floor((this.offsetY || 0) / this.options.rowHeight);\n      first = Math.max(floor, 0);\n      last = Math.min(first + this.pageSize, this.rowCount);\n    } else {\n      first = Math.max(this.options.offset * this.pageSize, 0);\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    return { first, last };\n  }\n\n  setSelected(selected: any[]) {\n    if (!this.selected) {\n      this.selected = selected || [];\n    } else {\n      this.selected.splice(0, this.selected.length);\n      this.selected.push(...selected);\n    }\n\n    this.onSelectionChange.emit(this.selected);\n    return this;\n  }\n\n  setRows(rows: Array<any>) {\n    if (rows) {\n      this.rows = [...rows];\n      this.onRowsUpdate.emit(rows);\n    }\n    return this;\n  }\n\n  setOptions(options: TableOptions) {\n    this.options = options;\n    return this;\n  }\n\n  setPage({ type, value }) {\n    this.options.offset = value - 1;\n\n    this.onPageChange.emit({\n      type,\n      offset: this.options.offset,\n      limit: this.pageSize,\n      count: this.rowCount\n    });\n  }\n\n  nextSort(column: TableColumn) {\n    const idx = this.options.sorts.findIndex(s => {\n      return s.prop === column.prop;\n    });\n\n    let curSort = this.options.sorts[idx];\n    let curDir = undefined;\n    if (curSort) curDir = curSort.dir;\n\n    const dir = nextSortDir(this.options.sortType, curDir);\n    if (dir === undefined) {\n      this.options.sorts.splice(idx, 1);\n    } else if (curSort) {\n      this.options.sorts[idx].dir = dir;\n    } else {\n      if (this.options.sortType === SortType.single) {\n        this.options.sorts.splice(0, this.options.sorts.length);\n      }\n\n      this.options.sorts.push(new Sort({dir, prop: column.prop}));\n    }\n\n    if (!column.comparator) {\n      this.setRows(sortRows(this.rows, this.options.sorts));\n    } else {\n      column.comparator(this.rows, this.options.sorts);\n    }\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  KeyValueDiffers,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  DoCheck,\n  AfterViewInit,\n  IterableDiffer,\n  HostBinding\n} from '@angular/core';\n\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { ColumnMode } from '../enums/ColumnMode';\nimport { TableOptions } from '../models/TableOptions';\nimport { TableColumn } from '../models/TableColumn';\nimport { DataTableColumn } from './DataTableColumn';\nimport { StateService } from '../services/State';\n\n@Component({\n  selector: 'datatable',\n  template: `\n    <div\n      visibility-observer\n      (onVisibilityChange)=\"adjustSizes()\">\n      <datatable-header\n        (onColumnChange)=\"onColumnChange.emit($event)\">\n      </datatable-header>\n      <datatable-body\n        (onRowClick)=\"onRowClick.emit($event)\"\n        (onRowSelect)=\"onRowSelect($event)\">\n      </datatable-body>\n      <datatable-footer\n        (onPageChange)=\"onPageChanged($event)\">\n      </datatable-footer>\n    </div>\n  `\n})\nexport class DataTable implements OnInit, DoCheck, AfterViewInit {\n\n  @Input() options: TableOptions;\n  @Input() rows: any[];\n  @Input() selected: any[];\n\n  @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n  @Output() onRowsUpdate: EventEmitter<any> = new EventEmitter();\n  @Output() onRowClick: EventEmitter<any> = new EventEmitter();\n  @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DataTableColumn) columns: QueryList<DataTableColumn>;\n\n  private element: HTMLElement;\n  private rowDiffer: IterableDiffer;\n  private colDiffer: IterableDiffer;\n\n  constructor(\n    public state: StateService,\n    element: ElementRef,\n    differs: KeyValueDiffers) {\n\n    this.element = element.nativeElement;\n    this.element.classList.add('datatable');\n\n    this.rowDiffer = differs.find({}).create(null);\n    this.colDiffer = differs.find({}).create(null);\n  }\n\n  ngOnInit(): void {\n    const {options, rows, selected} = this;\n\n    this.state\n      .setOptions(options)\n      .setRows(rows)\n      .setSelected(selected);\n  }\n\n  ngAfterViewInit() {\n    this.adjustColumns();\n\n    if (this.columns.length) {\n      setTimeout(() => {\n        for (let col of this.columns.toArray()) {\n          this.options.columns.push(new TableColumn(col));\n        }\n      });\n    }\n  }\n\n  ngDoCheck() {\n    if (this.rowDiffer.diff(this.rows)) {\n      this.state.setRows(this.rows);\n      this.onRowsUpdate.emit(this.rows);\n    }\n\n    this.checkColumnChanges();\n  }\n\n  checkColumnChanges() {\n    const colDiff = this.colDiffer.diff(this.options.columns);\n\n    if (colDiff) {\n      let chngd: boolean = false;\n      colDiff.forEachAddedItem(() => {\n        chngd = true;\n        return false;\n      });\n\n      if (!chngd) {\n        colDiff.forEachRemovedItem(() => {\n          chngd = true;\n          return false;\n        });\n      }\n\n      // if a column was added or removed\n      // we need to re-adjust columns\n      if (chngd) this.adjustColumns();\n    }\n  }\n\n  adjustSizes() {\n    let { height, width } = this.element.getBoundingClientRect();\n    this.state.innerWidth = Math.floor(width);\n\n    if (this.options.scrollbarV) {\n      if (this.options.headerHeight) height = height - this.options.headerHeight;\n      if (this.options.footerHeight) height = height - this.options.footerHeight;\n      this.state.bodyHeight = height;\n    }\n\n    this.adjustColumns();\n  }\n\n  adjustColumns(forceIdx?: number) {\n    if (!this.options.columns) return;\n\n    let width: number = this.state.innerWidth;\n    if (this.options.scrollbarV) {\n      width = width - this.state.scrollbarWidth;\n    }\n\n    if (this.options.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(this.options.columns, width, forceIdx);\n    } else if (this.options.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(this.options.columns, width);\n    }\n  }\n\n  onPageChanged(action) {\n    this.state.setPage(action);\n    this.onPageChange.emit(action.page);\n  }\n\n  onRowSelect(event) {\n    this.state.setSelected(event);\n    this.onSelectionChange.emit(event);\n  }\n\n  @HostListener('window:resize')\n  resize() {\n    this.adjustSizes();\n  }\n\n  @HostBinding('class.fixed-header')\n  get isFixedHeader() {\n    const headerHeight: number|string = this.options.headerHeight;\n    return (typeof headerHeight === 'string') ? (<string>headerHeight) !== 'auto' : true;\n  }\n\n  @HostBinding('class.fixed-row')\n  get isFixedRow() {\n    const rowHeight: number|string = this.options.rowHeight;\n    return (typeof rowHeight === 'string') ? (<string>rowHeight) !== 'auto' : true;\n  }\n\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll() {\n    return this.options.scrollbarV;\n  }\n\n  @HostBinding('class.scroll-horz')\n  get isHorScroll() {\n    return this.options.scrollbarH;\n  }\n\n  @HostBinding('class.selectable')\n  get isSelectable() {\n    return this.options.selectionType !== undefined;\n  }\n\n}\n","import { camelCase } from './camelCase';\n\nlet cache = {};\nlet testStyle = document.createElement('div').style;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n  const styles = window.getComputedStyle(document.documentElement, '');\n  const pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/))[1];\n  const dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\n\n  return {\n    dom,\n    lowercase: pre,\n    css: `-${pre}-`,\n    js: pre[0].toUpperCase() + pre.substr(1)\n  };\n})();\n\nexport function getVendorPrefixedName(property) {\n  const name = camelCase(property);\n\n  if(!cache[name]) {\n    if(testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if(testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camelCase';\n\n// browser detection and prefixing tools\nlet transform = getVendorPrefixedName('transform');\nlet backfaceVisibility = getVendorPrefixedName('backfaceVisibility');\nlet hasCSSTransforms = !!getVendorPrefixedName('transform');\nlet hasCSS3DTransforms = !!getVendorPrefixedName('perspective');\nlet ua = window.navigator.userAgent;\nlet isSafari = (/Safari\\//).test(ua) && !(/Chrome\\//).test(ua);\n\nexport function translateXY(styles, x, y) {\n  if (hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import {\n  Component,\n  Output,\n  ElementRef,\n  EventEmitter\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      [style.width]=\"state.columnGroupWidths.total + 'px'\"\n      [style.height]=\"headerHeight\"\n      class=\"datatable-header-inner\">\n      <div\n        class=\"datatable-row-left\"\n        [ngStyle]=\"stylesByGroup('left')\"\n        *ngIf=\"state.columnsByPin.left.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.left\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n      <div\n        class=\"datatable-row-center\"\n        [ngStyle]=\"stylesByGroup('center')\"\n        *ngIf=\"state.columnsByPin.center.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.center\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n      <div\n        class=\"datatable-row-right\"\n        [ngStyle]=\"stylesByGroup('right')\"\n        *ngIf=\"state.columnsByPin.right.length\">\n        <datatable-header-cell\n          *ngFor=\"let column of state.columnsByPin.right\"\n          [model]=\"column\"\n          (onColumnChange)=\"onColumnChange.emit($event)\">\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    '[style.width]': 'headerWidth',\n    '[style.height]': 'headerHeight'\n  }\n})\nexport class DataTableHeader {\n\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  get headerWidth() {\n    if(this.state.options.scrollbarH)\n      return this.state.innerWidth + 'px';\n\n    return '100%';\n  }\n\n  get headerHeight() {\n    let height = this.state.options.headerHeight;\n    if(height !== 'auto') return `${height}px`;\n    return height;\n  }\n\n  constructor(private state: StateService, elm: ElementRef) {\n    elm.nativeElement.classList.add('datatable-header');\n  }\n\n  columnResized(width, column) {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if(width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    column.width = width;\n\n    this.onColumnChange.emit({\n      type: 'resize',\n      value: column\n    });\n  }\n\n  columnReordered({ prevIndex, newIndex, model }) {\n    this.state.options.columns.splice(prevIndex, 1);\n    this.state.options.columns.splice(newIndex, 0, model);\n\n    this.onColumnChange.emit({\n      type: 'reorder',\n      value: model\n    });\n  }\n\n  stylesByGroup(group) {\n    const widths = this.state.columnGroupWidths;\n    const offsetX = this.state.offsetX;\n\n    let styles = {\n      width: `${widths[group]}px`\n    };\n\n    if(group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if(group === 'right') {\n      const totalDiff = widths.total - this.state.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27\n}\n","export function selectRows(selected, row) {\n  const selectedIndex = selected.indexOf(row);\n\n  if(selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(selected, rows, index, prevIndex) {\n  const reverse = index < prevIndex;\n\n  for(let i = 0, len = rows.length; i < len; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: (prevIndex - index)\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if((reverse && lesser) || (!reverse && greater)) {\n      const idx = selected.indexOf(row);\n\n      // if reverse shift selection (unselect) and the\n      // row is already selected, remove it from selected\n      if (reverse && idx > -1) {\n        selected.splice(idx, 1);\n        continue;\n      }\n\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if( i >= range.start && i < range.end) {\n        if (idx === -1) {\n          selected.push(row);\n        }\n      }\n    }\n  }\n\n  return selected;\n}\n","export enum SelectionType {\n  single = 'single' as any,\n  multi = 'multi' as any,\n  multiShift = 'multiShift' as any\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\n@Directive({\n  selector: '[scroller]',\n  host: {\n    '[style.height]': 'scrollHeight',\n    '[style.width]': 'scrollWidth + \"px\"'\n  }\n})\nexport class Scroller implements OnInit, OnDestroy {\n\n  @Input() rowHeight: number;\n  @Input() count: number;\n  @Input() scrollWidth: number;\n  @Input() scrollbarV: boolean = false;\n\n  @Output() onScroll: EventEmitter<any> = new EventEmitter();\n\n  private scrollYPos: number = 0;\n  private scrollXPos: number = 0;\n  private prevScrollYPos: number = 0;\n  private prevScrollXPos: number = 0;\n  private element: any;\n  private parentElement: any;\n\n  get scrollHeight() {\n    return (this.count * this.rowHeight) + 'px';\n  }\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n    this.element.classList.add('datatable-scroll');\n  }\n\n  ngOnInit() {\n    // manual bind so we don't always listen\n    if(this.scrollbarV) {\n      this.parentElement = this.element.parentElement.parentElement;\n      this.parentElement.addEventListener('scroll', this.onScrolled.bind(this));\n    }\n  }\n\n  ngOnDestroy() {\n    if(this.scrollbarV) {\n      this.parentElement.removeEventListener('scroll');\n    }\n  }\n\n  setOffset(offsetY: number) {\n    this.parentElement.scrollTop = offsetY;\n  }\n\n  onScrolled(event) {\n    const dom = event.currentTarget;\n    this.scrollYPos = dom.scrollTop;\n    this.scrollXPos = dom.scrollLeft;\n\n    requestAnimationFrame(this.updateOffset.bind(this));\n  }\n\n  updateOffset() {\n    let direction;\n    if(this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if(this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.onScroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  OnInit,\n  HostBinding,\n  OnDestroy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Keys } from '../../utils/keys';\nimport { selectRows, selectRowsBetween } from '../../utils/selection';\nimport { translateXY } from '../../utils/translate';\n\nimport { StateService } from '../../services/State';\nimport { SelectionType } from '../../enums/SelectionType';\nimport { Scroller } from '../../directives/Scroller';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <div>\n      <datatable-progress\n        *ngIf=\"state.options.loadingIndicator\">\n      </datatable-progress>\n      <div\n        scroller\n        (onScroll)=\"onBodyScroll($event)\"\n        *ngIf=\"state.rows.length\"\n        [rowHeight]=\"state.options.rowHeight\"\n        [scrollbarV]=\"state.options.scrollbarV\"\n        [count]=\"state.rowCount\"\n        [scrollWidth]=\"state.columnGroupWidths.total\">\n        <datatable-body-row\n          [ngStyle]=\"getRowsStyles(row)\"\n          [style.height]=\"state.options.rowHeight + 'px'\"\n          *ngFor=\"let row of rows; let i = index;\"\n          [attr.tabindex]=\"i\"\n          (click)=\"rowClicked($event, i, row)\"\n          (keydown)=\"rowKeydown($event, i, row)\"\n          [row]=\"row\"\n          [class.datatable-row-even]=\"row.$$index % 2 === 0\"\n          [class.datatable-row-odd]=\"row.$$index % 2 !== 0\">\n        </datatable-body-row>\n      </div>\n      <div\n        class=\"empty-row\"\n        *ngIf=\"!rows.length\"\n        [innerHTML]=\"state.options.emptyMessage\">\n      </div>\n    </div>\n  `\n})\nexport class DataTableBody implements OnInit, OnDestroy {\n\n  @Output() onRowClick: EventEmitter<any> = new EventEmitter();\n  @Output() onRowSelect: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(Scroller) scroller: Scroller;\n\n  public rows: any;\n  private prevIndex: number;\n  private sub: Subscription;\n\n  get selectEnabled() {\n    return !!this.state.options.selectionType;\n  }\n\n  constructor(public state: StateService, element: ElementRef) {\n    element.nativeElement.classList.add('datatable-body');\n  }\n\n  @HostBinding('style.height')\n  get bodyHeight() {\n    if (this.state.options.scrollbarV) {\n      return this.state.bodyHeight + 'px';\n    } else {\n      return 'auto';\n    }\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth() {\n    if (this.state.options.scrollbarH) {\n      return this.state.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  ngOnInit(): void {\n    this.rows = [...this.state.rows];\n\n    this.sub = this.state.onPageChange.subscribe((action) => {\n      this.updateRows();\n      this.hideIndicator();\n\n      if(this.state.options.scrollbarV && action.type === 'pager-event') {\n        const offset = (this.state.options.rowHeight * action.limit) * action.offset;\n        this.scroller.setOffset(offset);\n      }\n    });\n\n    this.sub.add(this.state.onRowsUpdate.subscribe(rows => {\n      this.updateRows();\n      this.hideIndicator();\n    }));\n  }\n\n  onBodyScroll(props) {\n    this.state.offsetY = props.scrollYPos;\n    this.state.offsetX = props.scrollXPos;\n\n    this.updatePage(props.direction);\n    this.updateRows();\n  }\n\n  updatePage(direction) {\n    const idxs = this.state.indexes;\n    let page = idxs.first / this.state.pageSize;\n\n    if(direction === 'up') {\n      page = Math.floor(page);\n    } else if(direction === 'down') {\n      page = Math.ceil(page);\n    }\n\n    if(direction !== undefined && !isNaN(page)) {\n      // pages are offset + 1 ;)\n      this.state.setPage({\n        type: 'body-event',\n        value: page + 1\n      });\n    }\n  }\n\n  updateRows(refresh?: boolean) {\n    const idxs = this.state.indexes;\n    let idx = 0;\n    let rowIndex = idxs.first;\n\n    let endSpliceIdx = refresh ? this.state.rowCount : idxs.last - idxs.first;\n    this.rows.splice(0, endSpliceIdx);\n\n    while (rowIndex < idxs.last && rowIndex < this.state.rowCount) {\n      let row = this.state.rows[rowIndex];\n\n      if(row) {\n        row.$$index = rowIndex;\n        this.rows[idx] = row;\n      }\n\n      idx++;\n      rowIndex++;\n    }\n  }\n\n  getRowsStyles(row) {\n    const rowHeight = this.state.options.rowHeight;\n\n    let styles = {\n      height: rowHeight + 'px'\n    };\n\n    if(this.state.options.scrollbarV) {\n      const idx = row ? row.$$index : 0;\n      const pos = idx * rowHeight;\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  hideIndicator(): void {\n    setTimeout(() => this.state.options.loadingIndicator = false, 500);\n  }\n\n  rowClicked(event, index, row): void {\n    this.onRowClick.emit({event, row});\n    this.selectRow(event, index, row);\n  }\n\n  rowKeydown(event, index, row) {\n    if (event.keyCode === Keys.return && this.selectEnabled) {\n      this.selectRow(event, index, row);\n    } else if (event.keyCode === Keys.up || event.keyCode === Keys.down) {\n      const dom = event.keyCode === Keys.up ?\n        event.target.previousElementSibling :\n        event.target.nextElementSibling;\n      if (dom) dom.focus();\n    }\n  }\n\n  selectRow(event, index, row) {\n    if (!this.selectEnabled) return;\n\n    const multiShift = this.state.options.selectionType === SelectionType.multiShift;\n    const multiClick = this.state.options.selectionType === SelectionType.multi;\n\n    let selections = [];\n    if (multiShift || multiClick) {\n      if (multiShift && event.shiftKey) {\n        const selected = [...this.state.selected];\n        selections = selectRowsBetween(selected, this.rows, index, this.prevIndex);\n      } else if (multiShift && !event.shiftKey) {\n        selections.push(row);\n      } else {\n        const selected = [...this.state.selected];\n        selections = selectRows(selected, row);\n      }\n    } else {\n      selections.push(row);\n    }\n\n    this.prevIndex = index;\n    this.onRowSelect.emit(selections);\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\n\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      *ngIf=\"state.options.footerHeight\"\n      [style.height]=\"state.options.footerHeight\">\n      <div class=\"page-count\">{{state.rowCount}} total</div>\n      <datatable-pager\n        [page]=\"curPage\"\n        [size]=\"state.pageSize\"\n        (onPaged)=\"onPageChange.emit($event)\"\n        [count]=\"state.rowCount\"\n        [hidden]=\"!visible\">\n       </datatable-pager>\n     </div>\n  `\n})\nexport class DataTableFooter {\n\n  @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n\n  get visible() {\n    return (this.state.rowCount / this.state.pageSize) > 1;\n  }\n\n  get curPage() {\n    return this.state.options.offset + 1;\n  }\n\n  constructor(elm: ElementRef, private state: StateService) {\n    elm.nativeElement.classList.add('datatable-footer');\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { StateService } from '../../services/State';\nimport { TableColumn } from '../../models/TableColumn';\nimport { SortDirection } from '../../enums/SortDirection';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div>\n      <span\n        class=\"datatable-header-cell-label draggable\"\n        *ngIf=\"!model.headerTemplate\"\n        [innerHTML]=\"name\">\n      </span>\n      <template\n        *ngIf=\"model.headerTemplate\"\n        [column]=\"model\"\n        [sort]=\"sort\"\n        [templateWrapper]=\"model.headerTemplate\">\n      </template>\n      <span\n        class=\"sort-btn\"\n        [ngClass]=\"sortClasses()\">\n      </span>\n    </div>\n  `,\n  host: {\n    '[class.sortable]': 'model.sortable',\n    '[class.resizable]': 'model.resizable',\n    '[style.width]': 'model.width + \"px\"',\n    '[style.minWidth]': 'model.minWidth + \"px\"',\n    '[style.maxWidth]': 'model.maxWidth + \"px\"',\n    '[style.height]': 'model.height + \"px\"',\n    '[attr.title]': 'name'\n  }\n})\nexport class DataTableHeaderCell {\n\n  @Input() model: TableColumn;\n\n  @Output() onColumnChange: EventEmitter<any> = new EventEmitter();\n\n  sort: Function = this.onSort.bind(this);\n\n  get sortDir() {\n    let sort = this.state.options.sorts.find(s => {\n      return s.prop === this.model.prop;\n    });\n\n    if(sort) return sort.dir;\n  }\n\n  get name() {\n    return this.model.name || this.model.prop;\n  }\n\n  constructor(public element: ElementRef, private state: StateService) {\n    element.nativeElement.classList.add('datatable-header-cell');\n  }\n\n  sortClasses(sort) {\n    let dir = this.sortDir;\n    return {\n      'sort-asc icon-down': dir === SortDirection.asc,\n      'sort-desc icon-up': dir === SortDirection.desc\n    };\n  }\n\n  onSort() {\n    if(this.model.sortable) {\n      this.state.nextSort(this.model);\n\n      this.onColumnChange.emit({\n        type: 'sort',\n        value: this.model\n      });\n    }\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(1)\"\n          class=\"icon-prev\">\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"prevPage()\"\n          class=\"icon-left\">\n        </a>\n      </li>\n      <li\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"nextPage()\"\n          class=\"icon-right\">\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a\n          href=\"javascript:void(0)\"\n          (click)=\"selectPage(totalPages)\"\n          class=\"icon-skip\">\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class DataTablePager {\n\n  @Input() size: number = 0;\n  @Output() onPaged: EventEmitter<any> = new EventEmitter();\n\n  private _count: number;\n  private _page: number;\n  private pages: any;\n\n  get totalPages() {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Input()\n  set count(val) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  @Input()\n  set page(val) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  constructor(elm: ElementRef) {\n    elm.nativeElement.classList.add('datatable-pager');\n  }\n\n  canPrevious() {\n    return this.page > 1;\n  }\n\n  canNext() {\n    return this.page < this.totalPages;\n  }\n\n  prevPage() {\n    if (this.page > 1) {\n      this.selectPage(--this.page);\n    }\n  }\n\n  nextPage() {\n    this.selectPage(++this.page);\n  }\n\n  selectPage(page: number) {\n    if (page > 0 && page <= this.totalPages) {\n      this.page = page;\n\n      this.onPaged.emit({\n        type: 'pager-event',\n        value: page\n      });\n    }\n  }\n\n  calcPages(page?: number) {\n    let pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    let maxSize = 5;\n    let isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = ((Math.ceil(page / maxSize) - 1) * maxSize) + 1;\n      endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: num\n      });\n    }\n\n    return pages;\n  }\n\n}\n","import { Component, Input, HostBinding, ElementRef } from '@angular/core';\nimport { translateXY } from '../../utils/translate';\nimport { StateService } from '../../services/State';\n\n@Component({\n  selector: 'datatable-body-row',\n  template: `\n    <div>\n      <div\n        class=\"datatable-row-left datatable-row-group\"\n        *ngIf=\"state.columnsByPin.left.length\"\n        [ngStyle]=\"stylesByGroup('left')\"\n        [style.width]=\"state.columnGroupWidths.left + 'px'\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.left\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n      <div\n        class=\"datatable-row-center datatable-row-group\"\n        [style.width]=\"state.columnGroupWidths.center + 'px'\"\n        [ngStyle]=\"stylesByGroup('center')\"\n        *ngIf=\"state.columnsByPin.center.length\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.center\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n      <div\n        class=\"datatable-row-right datatable-row-group\"\n        *ngIf=\"state.columnsByPin.right.length\"\n        [ngStyle]=\"stylesByGroup('right')\"\n        [style.width]=\"state.columnGroupWidths.right + 'px'\">\n        <datatable-body-cell\n          *ngFor=\"let column of state.columnsByPin.right\"\n          [row]=\"row\"\n          [column]=\"column\">\n        </datatable-body-cell>\n      </div>\n    </div>\n  `\n})\nexport class DataTableBodyRow {\n\n  @Input() row: any;\n\n  @HostBinding('class.active')\n  get isSelected() {\n    return this.state.selected &&\n      this.state.selected.indexOf(this.row) > -1;\n  }\n\n  constructor(public state: StateService, element: ElementRef) {\n    element.nativeElement.classList.add('datatable-body-row');\n  }\n\n  stylesByGroup(group) {\n    const widths = this.state.columnGroupWidths;\n    const offsetX = this.state.offsetX;\n\n    let styles = {\n      width: `${widths[group]}px`\n    };\n\n    if(group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if(group === 'right') {\n      const totalDiff = widths.total - this.state.innerWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.state.scrollbarWidth) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBar {\n}\n","/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {object} obj\n * @param {string} path\n */\nexport function deepValueGetter(obj, path) {\n  if(!obj || !path) return obj;\n\n  let current = obj;\n  let split = path.split('.');\n\n  if(split.length) {\n    for(let i = 0, len = split.length; i < len; i++) {\n      current = current[split[i]];\n    }\n  }\n\n  return current;\n}\n","import { Component, Input, PipeTransform, HostBinding, ElementRef } from '@angular/core';\nimport { TableColumn } from '../../models/TableColumn';\nimport { deepValueGetter } from '../../utils/deepGetter';\n\n@Component({\n  selector: 'datatable-body-cell',\n  template: `\n    <div class=\"datatable-body-cell-label\">\n      <span\n        *ngIf=\"!column.template\"\n        [innerHTML]=\"value\">\n      </span>\n      <template\n        *ngIf=\"column.template\"\n        [value]=\"value\"\n        [row]=\"row\"\n        [column]=\"column\"\n        [templateWrapper]=\"column.template\">\n      </template>\n    </div>\n  `\n})\nexport class DataTableBodyCell {\n\n  @Input() column: TableColumn;\n  @Input() row: any;\n\n  constructor(element: ElementRef) {\n    element.nativeElement.classList.add('datatable-body-cell');\n  }\n\n  get value() {\n    if (!this.row) return '&nbsp';\n    let prop: any = deepValueGetter(this.row, this.column.prop);\n    const userPipe: PipeTransform = this.column.pipe;\n    if (prop == ''||prop ==null) prop =  '&nbsp';\n    return userPipe ? userPipe.transform(prop) : prop;\n  }\n\n  @HostBinding('style.width') get width() {\n    return this.column.width + 'px';\n  }\n\n}\n","/**\n * Observes changes to an elements visibility.\n * https://medium.com/@amcdnl/javascript-s-new-intersectionobserver-cdce8a73bef8#.evn5twug3\n *\n * Example:\n *\n * \t\tvar elm = document.getElementById(\"panda\");\n * \t \tnew VisibilityObserver(elm, function() {\n * \t\t\talert('PAndas rock!');\n * \t  });\n *\n */\nexport class VisibilityObserver {\n\n  observer: IntersectionObserver;\n  callback: any;\n\n  constructor(element, callback) {\n    this.callback = callback;\n\n    /*\n    // this is not working...\n    if(window.IntersectionObserver) {\n      this.observer = new IntersectionObserver(\n        this.processChanges.bind(this), { threshold: [0.5] });\n\n      this.observer.observe(element);\n    } else { this.runPolyfill(element); }\n    */\n\n    this.runPolyfill(element);\n  }\n\n  runPolyfill(element) {\n    let checkVisibility = () => {\n      const { width, height } = element.getBoundingClientRect();\n\n      if (width && height) {\n        if(this.callback) this.callback();\n      } else {\n        setTimeout(() => checkVisibility(), 10);\n      }\n    };\n\n    checkVisibility();\n  }\n\n  isVisible(boundingClientRect, intersectionRect) {\n    return ((intersectionRect.width * intersectionRect.height) /\n            (boundingClientRect.width * boundingClientRect.height) >= 0.5);\n  }\n\n  visibleTimerCallback(element, observer) {\n    delete element.visibleTimeout;\n\n    // Process any pending observations\n    this.processChanges(observer.takeRecords());\n\n    if ('isVisible' in element) {\n      delete element.isVisible;\n      if(this.callback) this.callback();\n      observer.unobserve(element);\n    }\n  }\n\n  processChanges(changes) {\n    changes.forEach((changeRecord) => {\n      let element = changeRecord.target;\n\n      element.isVisible = this.isVisible(\n        changeRecord.boundingClientRect,\n        changeRecord.intersectionRect);\n\n      if ('isVisible' in element) {\n        // Transitioned from hidden to visible\n        element.visibleTimeout = setTimeout(\n          this.visibleTimerCallback.bind(this),\n          1000,\n          element,\n          this.observer);\n      } else {\n        // Transitioned from visible to hidden\n        if ('visibleTimeout' in element) {\n          clearTimeout(element.visibleTimeout);\n          delete element.visibleTimeout;\n        }\n      }\n    });\n  }\n\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding\n} from '@angular/core';\n\nimport { VisibilityObserver } from '../utils/VisibilityObserver';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibility-observer\n * \t\t\t(onVisibilityChange)=\"doSomething($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibility-observer]' })\nexport class Visibility {\n\n  @HostBinding('class.visible') visible: boolean = false;\n\n  @Output() onVisibilityChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    new VisibilityObserver(\n      element.nativeElement,\n      this.visbilityChange.bind(this));\n  }\n\n  visbilityChange() {\n    // trigger zone recalc for columns\n    setTimeout(() => {\n      this.visible = true;\n      this.onVisibilityChange.emit(true);\n    });\n  }\n\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  HostListener\n} from '@angular/core';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPress {\n\n  @Input() duration: number = 500;\n\n  @Output() onLongPress: EventEmitter<any> = new EventEmitter();\n  @Output() onLongPressing: EventEmitter<any> = new EventEmitter();\n  @Output() onLongPressEnd: EventEmitter<any> = new EventEmitter();\n\n  private pressing: boolean;\n  private longPressing: boolean;\n  private timeout: any;\n  private mouseX: number = 0;\n  private mouseY: number = 0;\n\n  @HostBinding('class.press')\n  get press() { return this.pressing; }\n\n  @HostBinding('class.longpress')\n  get longPress() { return this.longPressing; }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event) {\n    // don't do right/middle clicks\n    if(event.which !== 1) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.longPressing = false;\n\n    this.timeout = setTimeout(() => {\n      this.longPressing = true;\n      this.onLongPress.emit(event);\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMouseMove(event) {\n    if(this.pressing && !this.longPressing) {\n      const xThres = (event.clientX - this.mouseX) > 10;\n      const yThres = (event.clientY - this.mouseY) > 10;\n      if(xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event) {\n    if(this.longPressing) {\n      this.timeout = setTimeout(() => {\n        this.onLongPressing.emit(event);\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress() {\n    clearTimeout(this.timeout);\n    this.longPressing = false;\n    this.pressing = false;\n    this.onLongPressEnd.emit(true);\n  }\n\n  @HostListener('mouseup')\n  onMouseUp() { this.endPress(); }\n\n}\n","import { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs/Rx';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class Resizeable {\n\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n  @Output() onResize: EventEmitter<any> = new EventEmitter();\n\n  private element: HTMLElement;\n  private subscription: Subscription;\n  private prevScreenX: number = 0;\n  private resizing: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n\n    if (this.resizeEnabled) {\n      const node = document.createElement('span');\n      node.classList.add('resize-handle');\n      this.element.appendChild(node);\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseup() {\n    this.resizing = false;\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.onResize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event) {\n    const isHandle = event.target.classList.contains('resize-handle');\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      this.subscription = Observable.fromEvent(document, 'mousemove')\n        .subscribe((e) => this.move(e));\n    }\n  }\n\n  move(event): void {\n    const movementX = event.movementX || event.mozMovementX || (event.screenX - this.prevScreenX);\n    const width = this.element.clientWidth;\n    const newWidth = width + (movementX || 0);\n\n    this.prevScreenX = event.screenX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs/Rx';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class Draggable {\n\n  public element: HTMLElement;\n\n  // this kinda a hack to get\n  // the model in the orderable\n  @Input() model: any;\n\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() onDragStart: EventEmitter<any> = new EventEmitter();\n  @Output() onDragging: EventEmitter<any> = new EventEmitter();\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\n\n  private dragging: boolean = false;\n  private subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseup(event) {\n    this.dragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.onDragEnd.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event) {\n    if (event.target.classList.contains('draggable')) {\n      event.preventDefault();\n      this.dragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n      this.subscription = Observable.fromEvent(document, 'mousemove')\n        .subscribe((ev) => this.move(ev, mouseDownPos));\n\n      this.onDragStart.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n  move(event, mouseDownPos): void {\n    if (!this.dragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    if (this.dragX || this.dragY) {\n      this.element.classList.add('dragging');\n\n      this.onDragging.emit({\n        event,\n        element: this.element,\n        model: this.model\n      });\n    }\n  }\n\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList\n} from '@angular/core';\n\nimport { Draggable } from './Draggable';\n\n@Directive({ selector: '[orderable]' })\nexport class Orderable {\n\n  @Output() onReorder: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(Draggable)\n  private drags: QueryList<Draggable>;\n\n  private positions: any;\n\n  ngAfterContentInit() {\n    this.drags.forEach(d =>\n      d.onDragStart.subscribe(this.onDragStart.bind(this)) &&\n      d.onDragEnd.subscribe(this.onDragEnd.bind(this)));\n  }\n\n  onDragStart() {\n    this.positions = {};\n\n    let i = 0;\n    for(let dragger of this.drags.toArray()) {\n      let elm = dragger.element;\n      this.positions[dragger.model.prop] =  {\n        left: parseInt(elm.offsetLeft.toString(), 0),\n        index: i++\n      };\n    }\n  }\n\n  onDragEnd({ element, model }) {\n    const newPos = parseInt(element.offsetLeft.toString(), 0);\n    const prevPos = this.positions[model.prop];\n\n    let i = 0;\n    for(let prop in this.positions) {\n      let pos = this.positions[prop];\n\n      let movedLeft = newPos < pos.left && prevPos.left > pos.left;\n      let movedRight = newPos > pos.left && prevPos.left < pos.left;\n\n      if(movedLeft || movedRight) {\n        this.onReorder.emit({\n          prevIndex: prevPos.index,\n          newIndex: i,\n          model\n        });\n      }\n\n      i++;\n    }\n\n    element.style.left = 'auto';\n  }\n\n}\n","import {\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  Input,\n  EmbeddedViewRef,\n  SimpleChange\n} from '@angular/core';\n\n@Directive({ selector: '[templateWrapper]' })\nexport class TemplateWrapper {\n\n  @Input() templateWrapper: TemplateRef<any>;\n  @Input() value: any;\n  @Input() row: any;\n  @Input() column: any;\n  @Input() sort: any;\n\n  private embeddedViewRef: EmbeddedViewRef<any>;\n\n  constructor(private viewContainer: ViewContainerRef) { }\n\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (changes['templateWrapper']) {\n      if (this.embeddedViewRef) {\n        this.embeddedViewRef.destroy();\n      }\n\n      this.embeddedViewRef = this.viewContainer.createEmbeddedView(\n        this.templateWrapper, {\n          value: this.value,\n          row: this.row,\n          column: this.column,\n          sort: this.sort\n        });\n    }\n\n    if (this.embeddedViewRef) {\n      this.embeddedViewRef.context.value = this.value;\n      this.embeddedViewRef.context.row = this.row;\n      this.embeddedViewRef.context.column = this.column;\n      this.embeddedViewRef.context.sort = this.sort;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Components\nimport { DataTable } from './components/DataTable';\nimport { DataTableColumn } from './components/DataTableColumn';\nimport { DataTableHeader } from './components/header/Header';\nimport { DataTableBody } from './components/body/Body';\nimport { DataTableFooter } from './components/footer/Footer';\nimport { DataTableHeaderCell } from './components/header/HeaderCell';\nimport { DataTablePager } from './components/footer/Pager';\nimport { DataTableBodyRow } from './components/body/BodyRow';\nimport { ProgressBar } from './components/body/ProgressBar';\nimport { DataTableBodyCell } from './components/body/BodyCell';\n\n// Services\nimport { StateService } from './services/State';\n\n// Directives\nimport { Visibility } from './directives/Visibility';\nimport { LongPress } from './directives/LongPress';\nimport { Resizeable } from './directives/Resizeable';\nimport { Orderable } from './directives/Orderable';\nimport { Draggable } from './directives/Draggable';\nimport { Scroller } from './directives/Scroller';\nimport { TemplateWrapper } from './directives/TemplateWrapper';\n\n// Enums\nimport { ColumnMode } from './enums/ColumnMode';\nimport { SortType } from './enums/SortType';\nimport { SortDirection } from './enums/SortDirection';\nimport { SelectionType } from './enums/SelectionType';\n\n// Models\nimport { TableOptions } from './models/TableOptions';\nimport { TableColumn } from './models/TableColumn';\nimport { Sort } from './models/Sort';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Visibility,\n    Draggable,\n    Resizeable,\n    Orderable,\n    LongPress,\n    TemplateWrapper,\n    Scroller,\n    DataTable,\n    DataTableColumn,\n    DataTableHeader,\n    DataTableHeaderCell,\n    DataTableBody,\n    DataTableFooter,\n    DataTablePager,\n    ProgressBar,\n    DataTableBodyRow,\n    DataTableBodyCell\n  ],\n  providers: [\n    StateService\n  ],\n  exports: [\n    DataTable,\n    DataTableColumn\n  ]\n})\nexport class Angular2DataTableModule { }\n\nexport {\n  TableOptions,\n  TableColumn,\n  Sort,\n  SelectionType,\n  ColumnMode,\n  SortDirection,\n  SortType\n};\n"],"names":["columnTotalWidth","ColumnMode","SortType","ContentChild","TemplateRef","Directive","SortDirection","EventEmitter","Injectable","Input","Output","ContentChildren","HostListener","HostBinding","Component","SelectionType","ViewChild","ChangeDetectionStrategy","Observable","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA,sBAA6B,IAAI;IAC/B,IAAI,GAAG,GAAG;QACR,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;KACV,CAAC;IAEF,IAAG,IAAI,EAAE;QACP,KAAe,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAf,IAAI,GAAG,aAAA;YACT,IAAG,GAAG,CAAC,UAAU,EAAE;gBACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;iBAAM,IAAG,GAAG,CAAC,WAAW,EAAE;gBACzB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB;iBAAM;gBACL,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;SACF;KACF;IAED,OAAO,GAAG,CAAC;CACZ;;;;;;AAOD,2BAAkC,MAAM,EAAE,GAAG;IAC3C,OAAO;QACL,IAAI,EAAEA,kBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;QACnC,MAAM,EAAEA,kBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC;QACvC,KAAK,EAAEA,kBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,KAAK,EAAEA,kBAAgB,CAAC,GAAG,CAAC;KAC7B,CAAC;CACH;;;;;;AAOD,4BAAiC,OAAO,EAAE,IAAK;IAC7C,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,IAAG,OAAO,EAAE;QACV,KAAa,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAhB,IAAI,CAAC,gBAAA;YACP,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1B,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;SACrD;KACF;IAED,OAAO,UAAU,CAAC;CACnB;;ACtDD;;;;;AAKA,0BAAiC,OAAY,EAAE,IAAU;IACvD,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,KAAkB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;QAArB,IAAI,MAAM,gBAAA;QACZ,IAAM,GAAG,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QACjC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;KAC/D;IAED,OAAO,UAAU,CAAC;CACnB;;;;;AAMD,0BAAiC,OAAO;IACtC,IAAI,aAAa,GAAG,CAAC,CAAC;IAEtB,KAAc,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;QAAhB,IAAI,CAAC,gBAAA;QACR,aAAa,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC;KAClC;IAED,OAAO,aAAa,CAAC;CACtB;;;;;;;AAQD,4BAAmC,UAAe,EAAE,aAAkB;IACpE,IAAI,YAAY,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;IAChD,IAAI,aAAa,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;IACjD,IAAI,WAAW,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;IAE3C,IAAI,YAAY,KAAK,aAAa,EAAE;QAClC,YAAY,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;KACzD;CACF;;;;;;;AAQD,sBAAsB,WAAgB,EAAE,QAAa,EAAE,aAAkB;;IAEvE,KAAI,IAAI,IAAI,IAAI,WAAW,EAAE;QAC3B,KAAkB,UAAiB,EAAjB,KAAA,WAAW,CAAC,IAAI,CAAC,EAAjB,cAAiB,EAAjB,IAAiB;YAA/B,IAAI,MAAM,SAAA;YACZ,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;gBACzB,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC;gBACzB,aAAa,IAAI,MAAM,CAAC,QAAQ,CAAC;aAClC;iBAAM;gBACL,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;aAClB;SACF;KACF;IAED,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,cAAc,GAAG,QAAQ,CAAC;;IAG9B,GAAG;QACD,IAAI,iBAAiB,GAAG,cAAc,GAAG,aAAa,CAAC;QACvD,cAAc,GAAG,CAAC,CAAC;QAEnB,KAAI,IAAI,IAAI,IAAI,WAAW,EAAE;YAC3B,KAAkB,UAAiB,EAAjB,KAAA,WAAW,CAAC,IAAI,CAAC,EAAjB,cAAiB,EAAjB,IAAiB;gBAA/B,IAAI,MAAM,SAAA;;gBAEZ,IAAI,MAAM,CAAC,aAAa,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBACrD,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,GAAI,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC;oBACnE,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE;wBAC/D,cAAc,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;wBAC7C,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;wBAC/B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;qBACjC;yBAAM;wBACL,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;qBACzB;iBACF;aACF;SACF;KACF,QAAQ,cAAc,KAAK,CAAC,EAAE;CAChC;;;;;;;;;;;;;;;;;;;;;;;AAwBD,+BAAsC,UAAe,EAAE,aAAkB,EAAE,QAAa;IACtF,IAAI,YAAY,GAAG,CAAC,CAAC;IAErB,IAAI,eAAe,GAAG,QAAQ,GAAG,CAAC,CAAC;QACjC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,OAAO,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC;QACxF,UAAU,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,OAAO,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAExD,KAAkB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;QAAxB,IAAI,MAAM,mBAAA;QACZ,IAAG,CAAC,MAAM,CAAC,aAAa,EAAE;YACxB,YAAY,IAAI,MAAM,CAAC,KAAK,CAAC;SAC9B;aAAM;YACL,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;SACrD;KACF;IAED,IAAI,cAAc,GAAG,aAAa,GAAG,YAAY,CAAC;IAClD,IAAI,sBAAsB,GAAG,cAAc,GAAG,eAAe,CAAC,MAAM,CAAC;IACrE,IAAI,aAAa,GAAG,YAAY,GAAG,aAAa,CAAC;IAEjD,KAAkB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe;QAA7B,IAAI,MAAM,wBAAA;QACZ,IAAG,aAAa,EAAE;YAChB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK,CAAC;SAClD;aAAM;YACL,IAAG,CAAC,MAAM,CAAC,UAAU,EAAE;gBACrB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;aAClC;YAED,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,GAAG,sBAAsB,CAAC;YAC3D,IAAG,MAAM,CAAC,OAAO,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE;gBAC9C,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;aAChC;iBAAM,IAAG,MAAM,CAAC,QAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE;gBACtD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;aAChC;iBAAM;gBACL,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;aACxB;SACF;KACF;CACF;;ACxJD,WAAY,UAAU;IACpB,oCAAW,UAAiB,cAAA,CAAA;IAC5B,gCAAO,MAAa,UAAA,CAAA;IACpB,iCAAQ,OAAc,WAAA,CAAA;CACvB,EAJWC,kBAAU,KAAVA,kBAAU,QAIrB;;ACJD,WAAY,QAAQ;IAClB,8BAAS,QAAe,YAAA,CAAA;IACxB,6BAAQ,OAAc,WAAA,CAAA;CACvB,EAHWC,gBAAQ,KAARA,gBAAQ,QAGnB;;ACGM;IA+DL,sBAAY,KAAU;;QA5DtB,YAAO,GAAkB,EAAE,CAAC;;QAG5B,eAAU,GAAY,KAAK,CAAC;;QAG5B,eAAU,GAAY,KAAK,CAAC;;;QAI5B,cAAS,GAAW,EAAE,CAAC;;;;QAKvB,eAAU,GAAeD,kBAAU,CAAC,QAAQ,CAAC;;QAG7C,mBAAc,GAAW,YAAY,CAAC;;;QAItC,iBAAY,GAAW,oBAAoB,CAAC;;;;QAK5C,iBAAY,GAAQ,EAAE,CAAC;;;QAIvB,iBAAY,GAAW,CAAC,CAAC;;QAGzB,mBAAc,GAAY,KAAK,CAAC;;QAGhC,UAAK,GAAW,SAAS,CAAC;;QAG1B,UAAK,GAAW,CAAC,CAAC;;QAGlB,WAAM,GAAW,CAAC,CAAC;;QAGnB,qBAAgB,GAAY,KAAK,CAAC;;QAMlC,gBAAW,GAAY,IAAI,CAAC;;QAG5B,aAAQ,GAAaC,gBAAQ,CAAC,MAAM,CAAC;;QAGrC,UAAK,GAAgB,EAAE,CAAC;QAGtB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5B;IAEH,mBAAC;CAAA,IAAA,AAED;;AC3EA;;;;AAIA;IACE,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CACjF;;ACND;;;;;;AAMA,mBAA0B,GAAG;;IAE3B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;;IAEzC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;;IAG9C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;;IAGvE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACxD,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;KACnC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;CACZ;;ACjBD;;;;AAIO;IAsEL,qBAAY,KAAW;;QAxDvB,SAAI,GAAW,EAAE,EAAE,CAAC;;QAGpB,iBAAY,GAAY,KAAK,CAAC;;QAG9B,eAAU,GAAY,KAAK,CAAC;;QAG5B,gBAAW,GAAY,KAAK,CAAC;;;;;QAM7B,aAAQ,GAAW,CAAC,CAAC;;QAGrB,aAAQ,GAAW,CAAC,CAAC;;QAGrB,aAAQ,GAAW,SAAS,CAAC;;QAG7B,UAAK,GAAW,GAAG,CAAC;;QAGpB,eAAU,GAAY,IAAI,CAAC;;QAG3B,eAAU,GAAQ,SAAS,CAAC;;QAG5B,SAAI,GAAkB,IAAI,CAAC;;QAG3B,aAAQ,GAAY,IAAI,CAAC;;QAGzB,cAAS,GAAY,IAAI,CAAC;;QAG1B,kBAAa,GAAY,IAAI,CAAC;QAe5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAE3B,IAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;IA1EM,oBAAQ,GAAf;QACE,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7B,IAAI,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;QAE5B,KAAI,IAAM,IAAI,IAAI,GAAG,EAAE;YACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClB;QAED,OAAO,KAAK,CAAC;KACd;IAmEH,kBAAC;CAAA,IAAA,AAED;;ACjFO;IAAA;KAIN;IAFC;QAACC,0BAAY,CAACC,yBAAW,CAAC;;qDAAA;IAN5B;QAACC,uBAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE;SAC/B,CAAC;;uBAAA;IAKF,sBAAC;;CAAA,IAAA,AAED;;ACbA;;;;;AAKA;IACE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;IAClC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;IAC5B,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,CAAC;IAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEjC,IAAI,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC;IACtC,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAEhC,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC3B,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEzB,IAAI,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;IACxC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEpC,OAAO,aAAa,GAAG,eAAe,CAAC;CACxC;AAAA,CAAC;;ACvBF,WAAY,aAAa;IACvB,qCAAM,KAAY,SAAA,CAAA;IAClB,sCAAO,MAAa,UAAA,CAAA;CACrB,EAHWC,qBAAa,KAAbA,qBAAa,QAGxB;;ACCD;;;;;;AAMA,qBAA4B,QAAkB,EAAE,OAAsB;IACpE,IAAI,QAAQ,KAAKJ,gBAAQ,CAAC,MAAM,EAAE;QAChC,IAAG,OAAO,KAAKI,qBAAa,CAAC,GAAG,EAAE;YAChC,OAAOA,qBAAa,CAAC,IAAI,CAAC;SAC3B;aAAM;YACL,OAAOA,qBAAa,CAAC,GAAG,CAAC;SAC1B;KACF;SAAM;QACL,IAAG,CAAC,OAAO,EAAE;YACX,OAAOA,qBAAa,CAAC,GAAG,CAAC;SAC1B;aAAM,IAAG,OAAO,KAAKA,qBAAa,CAAC,GAAG,EAAE;YACvC,OAAOA,qBAAa,CAAC,IAAI,CAAC;SAC3B;aAAM,IAAG,OAAO,KAAKA,qBAAa,CAAC,IAAI,EAAE;YACxC,OAAO,SAAS,CAAC;SAClB;KACF;CACF;AAAA,CAAC;;;;;;;;AASF,2BAAkC,CAAM,EAAE,CAAM;IAC9C,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,WAAW;QAAE,CAAC,GAAG,CAAC,CAAC;IAClD,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,WAAW;QAAE,CAAC,GAAG,CAAC,CAAC;IAElD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;;QAEpF,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE;YAAE,OAAO,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE;YAAE,OAAO,CAAC,CAAC;KACjD;SAAM;;QAEL,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;KAC7C;;IAGD,OAAO,CAAC,CAAC;CACV;;;;;;;AAQD,kBAAyB,IAAgB,EAAE,IAAiB;IAC1D,IAAI,IAAI,GAAO,IAAI,QAAC,CAAC;IAErB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAS,CAAM,EAAE,CAAM;QACtC,KAA2B,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAA3B,mBAAmB,EAAX,cAAI,EAAE,YAAG;YACnB,IAAM,UAAU,GAAG,GAAG,KAAKA,qBAAa,CAAC,IAAI;gBAC3C,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;YAGvC,IAAI,UAAU,KAAK,CAAC;gBAAE,OAAO,UAAU,CAAC;SACzC;;QAGD,OAAO,CAAC,CAAC;KACV,CAAC,CAAC;CACJ;;ACzEM;IAML,cAAY,KAAU;QACpB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5B;IAEH,WAAC;CAAA,IAAA,AAED;;ACFO;IAAA;QAML,sBAAiB,GAAsB,IAAIC,0BAAY,EAAE,CAAC;QAC1D,iBAAY,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QACrD,iBAAY,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAErD,mBAAc,GAAW,cAAc,EAAE,CAAC;QAC1C,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,GAAG,CAAC;KA6G1B;IA3GC,sBAAI,sCAAY;aAAhB;YACE,OAAO,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;;;OAAA;IAED,sBAAI,2CAAiB;aAArB;YACE,OAAO,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACnE;;;OAAA;IAED,sBAAI,kCAAQ;aAAZ;YACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aACzB;iBAAM;gBACL,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC3B;SACF;;;OAAA;IAED,sBAAI,kCAAQ;aAAZ;YACE,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAChE;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC3B;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aACzB;SACF;;;OAAA;IAED,sBAAI,iCAAO;aAAX;YACE,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,GAAG,CAAC,CAAC;YAEb,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACvE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACvD;iBAAM;gBACL,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACzD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACvD;YAED,OAAO,EAAE,YAAK,EAAE,UAAI,EAAE,CAAC;SACxB;;;OAAA;IAED,kCAAW,GAAX,UAAY,QAAe;QACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9C,MAAA,IAAI,CAAC,QAAQ,EAAC,IAAI,WAAI,QAAQ,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;;KACb;IAED,8BAAO,GAAP,UAAQ,IAAgB;QACtB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,GAAO,IAAI,QAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;KACb;IAED,iCAAU,GAAV,UAAW,OAAqB;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,IAAI,CAAC;KACb;IAED,8BAAO,GAAP,UAAQ,EAAe;YAAb,cAAI,EAAE,gBAAK;QACnB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,UAAI;YACJ,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC3B,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC,CAAC;KACJ;IAED,+BAAQ,GAAR,UAAS,MAAmB;QAC1B,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,CAAC;YACxC,OAAO,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;SAC/B,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI,OAAO;YAAE,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;QAElC,IAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACvD,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACnC;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACnC;aAAM;YACL,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAKL,gBAAQ,CAAC,MAAM,EAAE;gBAC7C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACzD;YAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAC,QAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;SAC7D;QAED,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACvD;aAAM;YACL,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAClD;KACF;IA1HH;QAACM,wBAAU,EAAE;;oBAAA;IA4Hb,mBAAC;CAAA,IAAA,AAED;;AC9FO;IAkBL,mBACS,KAAmB,EAC1B,OAAmB,EACnB,OAAwB;QAFjB,UAAK,GAAL,KAAK,CAAc;QAblB,iBAAY,GAAsB,IAAID,0BAAY,EAAE,CAAC;QACrD,iBAAY,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QACrD,eAAU,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QACnD,sBAAiB,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAC1D,mBAAc,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAa/D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAExC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAChD;IAED,4BAAQ,GAAR;QACE,IAAA,SAAsC,EAA/B,oBAAO,EAAE,cAAI,EAAE,sBAAQ,CAAS;QAEvC,IAAI,CAAC,KAAK;aACP,UAAU,CAAC,OAAO,CAAC;aACnB,OAAO,CAAC,IAAI,CAAC;aACb,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC1B;IAED,mCAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACvB,UAAU,CAAC;gBACT,KAAgB,UAAsB,EAAtB,KAAA,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAtB,cAAsB,EAAtB,IAAsB;oBAAjC,IAAI,GAAG,SAAA;oBACV,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;iBACjD;aACF,CAAC,CAAC;SACJ;KACF;IAED,6BAAS,GAAT;QACE,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,sCAAkB,GAAlB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1D,IAAI,OAAO,EAAE;YACX,IAAI,OAAK,GAAY,KAAK,CAAC;YAC3B,OAAO,CAAC,gBAAgB,CAAC;gBACvB,OAAK,GAAG,IAAI,CAAC;gBACb,OAAO,KAAK,CAAC;aACd,CAAC,CAAC;YAEH,IAAI,CAAC,OAAK,EAAE;gBACV,OAAO,CAAC,kBAAkB,CAAC;oBACzB,OAAK,GAAG,IAAI,CAAC;oBACb,OAAO,KAAK,CAAC;iBACd,CAAC,CAAC;aACJ;;;YAID,IAAI,OAAK;gBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;SACjC;KACF;IAED,+BAAW,GAAX;QACE,IAAA,yCAA4D,EAAtD,kBAAM,EAAE,gBAAK,CAA0C;QAC7D,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY;gBAAE,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YAC3E,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY;gBAAE,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YAC3E,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;SAChC;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,iCAAa,GAAb,UAAc,QAAiB;QAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;YAAE,OAAO;QAElC,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC3B,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;SAC3C;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAKN,kBAAU,CAAC,KAAK,EAAE;YAChD,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAC9D;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAKA,kBAAU,CAAC,IAAI,EAAE;YACtD,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACjD;KACF;IAED,iCAAa,GAAb,UAAc,MAAM;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,+BAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC;IAGD,0BAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAGD,sBAAI,oCAAa;aAAjB;YACE,IAAM,YAAY,GAAkB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YAC9D,OAAO,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,GAAY,YAAa,KAAK,MAAM,GAAG,IAAI,CAAC;SACtF;;;OAAA;IAGD,sBAAI,iCAAU;aAAd;YACE,IAAM,SAAS,GAAkB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACxD,OAAO,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,GAAY,SAAU,KAAK,MAAM,GAAG,IAAI,CAAC;SAChF;;;OAAA;IAGD,sBAAI,mCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SAChC;;;OAAA;IAGD,sBAAI,kCAAW;aAAf;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SAChC;;;OAAA;IAGD,sBAAI,mCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;SACjD;;;OAAA;IArJD;QAACQ,mBAAK,EAAE;;8CAAA;IACR;QAACA,mBAAK,EAAE;;2CAAA;IACR;QAACA,mBAAK,EAAE;;+CAAA;IAER;QAACC,oBAAM,EAAE;;mDAAA;IACT;QAACA,oBAAM,EAAE;;mDAAA;IACT;QAACA,oBAAM,EAAE;;iDAAA;IACT;QAACA,oBAAM,EAAE;;wDAAA;IACT;QAACA,oBAAM,EAAE;;qDAAA;IAET;QAACC,6BAAe,CAAC,eAAe,CAAC;;8CAAA;IA6GjC;QAACC,0BAAY,CAAC,eAAe,CAAC;;;;2CAAA;IAK9B;QAACC,yBAAW,CAAC,oBAAoB,CAAC;;kDAAA;IAMlC;QAACA,yBAAW,CAAC,iBAAiB,CAAC;;+CAAA;IAM/B;QAACA,yBAAW,CAAC,uBAAuB,CAAC;;iDAAA;IAKrC;QAACA,yBAAW,CAAC,mBAAmB,CAAC;;gDAAA;IAKjC;QAACA,yBAAW,CAAC,kBAAkB,CAAC;;iDAAA;IAvKlC;QAACC,uBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,8cAeT;SACF,CAAC;;iBAAA;IA0JF,gBAAC;;CAAA,IAAA,AAED;;ACpMA,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;;;AAIpD,IAAM,MAAM,GAAG,CAAC;IACd,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;IACrE,IAAM,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,IAAM,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE3E,OAAO;QACL,QAAG;QACH,SAAS,EAAE,GAAG;QACd,GAAG,EAAE,MAAI,GAAG,MAAG;QACf,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KACzC,CAAC;CACH,CAAC,EAAE,CAAC;AAEL,+BAAsC,QAAQ;IAC5C,IAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEjC,IAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACf,IAAG,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,SAAS,EAAE;YACjD,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC;SACrC;aAAM,IAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;YAC3C,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;SACxB;KACF;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;CACpB;;AC7BD;AACA,IAAI,SAAS,GAAG,qBAAqB,CAAC,WAAW,CAAC,CAAC;AACnD,IAAI,kBAAkB,GAAG,qBAAqB,CAAC,oBAAoB,CAAC,CAAC;AACrE,IAAI,gBAAgB,GAAG,CAAC,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;AAC5D,IAAI,kBAAkB,GAAG,CAAC,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;AAChE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;AACpC,IAAI,QAAQ,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAE/D,qBAA4B,MAAM,EAAE,CAAC,EAAE,CAAC;IACtC,IAAI,gBAAgB,EAAE;QACpB,IAAI,CAAC,QAAQ,IAAI,kBAAkB,EAAE;YACnC,MAAM,CAAC,SAAS,CAAC,GAAG,iBAAe,CAAC,YAAO,CAAC,WAAQ,CAAC;YACrD,MAAM,CAAC,kBAAkB,CAAC,GAAG,QAAQ,CAAC;SACvC;aAAM;YACL,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,eAAa,CAAC,YAAO,CAAC,QAAK,CAAC;SAC5D;KACF;SAAM;QACL,MAAM,CAAC,GAAG,GAAM,CAAC,OAAI,CAAC;QACtB,MAAM,CAAC,IAAI,GAAM,CAAC,OAAI,CAAC;KACxB;CACF;;AC+BM;IAiBL,yBAAoB,KAAmB,EAAE,GAAe;QAApC,UAAK,GAAL,KAAK,CAAc;QAf7B,mBAAc,GAAsB,IAAIP,0BAAY,EAAE,CAAC;QAgB/D,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;KACrD;IAfD,sBAAI,wCAAW;aAAf;YACE,IAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU;gBAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;YAEtC,OAAO,MAAM,CAAC;SACf;;;OAAA;IAED,sBAAI,yCAAY;aAAhB;YACE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;YAC7C,IAAG,MAAM,KAAK,MAAM;gBAAE,OAAU,MAAM,OAAI,CAAC;YAC3C,OAAO,MAAM,CAAC;SACf;;;OAAA;IAMD,uCAAa,GAAb,UAAc,KAAK,EAAE,MAAM;QACzB,IAAI,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC5B,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;SACzB;aAAM,IAAG,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE;YAClC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;SACzB;QAED,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;KACJ;IAED,yCAAe,GAAf,UAAgB,EAA8B;YAA5B,wBAAS,EAAE,sBAAQ,EAAE,gBAAK;QAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;KACJ;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAC5C,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEnC,IAAI,MAAM,GAAG;YACX,KAAK,EAAK,MAAM,CAAC,KAAK,CAAC,OAAI;SAC5B,CAAC;QAEF,IAAG,KAAK,KAAK,QAAQ,EAAE;YACrB,WAAW,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACtC;aAAM,IAAG,KAAK,KAAK,OAAO,EAAE;YAC3B,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACvD,IAAM,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;YAC9B,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;SAChC;QAED,OAAO,MAAM,CAAC;KACf;IA7DD;QAACG,oBAAM,EAAE;;2DAAA;IA9CX;QAACI,uBAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,iyCAoCT;YACD,IAAI,EAAE;gBACJ,eAAe,EAAE,aAAa;gBAC9B,gBAAgB,EAAE,cAAc;aACjC;SACF,CAAC;;uBAAA;IAkEF,sBAAC;;CAAA,IAAA,AAED;;ICzHY,IAKX;AALD,WAAY,IAAI;IACd,4BAAO,CAAA;IACP,gCAAS,CAAA;IACT,oCAAW,CAAA;IACX,oCAAW,CAAA;CACZ,EALW,IAAI,KAAJ,IAAI,QAKf;;oBCL0B,QAAQ,EAAE,GAAG;IACtC,IAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE5C,IAAG,aAAa,GAAG,CAAC,CAAC,EAAE;QACrB,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;KACnC;SAAM;QACL,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IAED,OAAO,QAAQ,CAAC;CACjB;AAED,2BAAkC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS;IAChE,IAAM,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;IAElC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC9C,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAM,OAAO,GAAG,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,CAAC;QAC7C,IAAM,MAAM,GAAG,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,CAAC;QAE5C,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;QACjC,IAAI,OAAO,EAAE;YACX,KAAK,GAAG;gBACN,KAAK,EAAE,KAAK;gBACZ,GAAG,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;aACzB,CAAC;SACH;aAAM;YACL,KAAK,GAAG;gBACN,KAAK,EAAE,SAAS;gBAChB,GAAG,EAAE,KAAK,GAAG,CAAC;aACf,CAAC;SACH;QAED,IAAG,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE;YAC/C,IAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;;YAIlC,IAAI,OAAO,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;gBACvB,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACxB,SAAS;aACV;;;YAID,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE;gBACrC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;oBACd,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACpB;aACF;SACF;KACF;IAED,OAAO,QAAQ,CAAC;CACjB;;ACtDD,WAAY,aAAa;IACvB,wCAAS,QAAe,YAAA,CAAA;IACxB,uCAAQ,OAAc,WAAA,CAAA;IACtB,4CAAa,YAAmB,gBAAA,CAAA;CACjC,EAJWC,qBAAa,KAAbA,qBAAa,QAIxB;;ACaM;IAoBL,kBAAY,OAAmB;QAftB,eAAU,GAAY,KAAK,CAAC;QAE3B,aAAQ,GAAsB,IAAIR,0BAAY,EAAE,CAAC;QAEnD,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,CAAC,CAAC;QASjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;KAChD;IAPD,sBAAI,kCAAY;aAAhB;YACE,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SAC7C;;;OAAA;IAOD,2BAAQ,GAAR;;QAEE,IAAG,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC;YAC9D,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3E;KACF;IAED,8BAAW,GAAX;QACE,IAAG,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SAClD;KACF;IAED,4BAAS,GAAT,UAAU,OAAe;QACvB,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,OAAO,CAAC;KACxC;IAED,6BAAU,GAAV,UAAW,KAAK;QACd,IAAM,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QAEjC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD;IAED,+BAAY,GAAZ;QACE,IAAI,SAAS,CAAC;QACd,IAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE;YACxC,SAAS,GAAG,MAAM,CAAC;SACpB;aAAM,IAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE;YAC/C,SAAS,GAAG,IAAI,CAAC;SAClB;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,oBAAS;YACT,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;KACvC;IAjED;QAACE,mBAAK,EAAE;;+CAAA;IACR;QAACA,mBAAK,EAAE;;2CAAA;IACR;QAACA,mBAAK,EAAE;;iDAAA;IACR;QAACA,mBAAK,EAAE;;gDAAA;IAER;QAACC,oBAAM,EAAE;;8CAAA;IAdX;QAACL,uBAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,IAAI,EAAE;gBACJ,gBAAgB,EAAE,cAAc;gBAChC,eAAe,EAAE,oBAAoB;aACtC;SACF,CAAC;;gBAAA;IAsEF,eAAC;;CAAA,IAAA,AAED;;ACjCO;IAeL,uBAAmB,KAAmB,EAAE,OAAmB;QAAxC,UAAK,GAAL,KAAK,CAAc;QAb5B,eAAU,GAAsB,IAAIE,0BAAY,EAAE,CAAC;QACnD,gBAAW,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAa5D,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KACvD;IAND,sBAAI,wCAAa;aAAjB;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;SAC3C;;;OAAA;IAOD,sBAAI,qCAAU;aAAd;YACE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;aACrC;iBAAM;gBACL,OAAO,MAAM,CAAC;aACf;SACF;;;OAAA;IAGD,sBAAI,oCAAS;aAAb;YACE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;aACrC;iBAAM;gBACL,OAAO,MAAM,CAAC;aACf;SACF;;;OAAA;IAED,gCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,KAAK,CAAC,IAAI,QAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,MAAM;YAClD,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;gBACjE,IAAM,MAAM,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC7E,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACjC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,IAAI;YACjD,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,CAAC,CAAC,CAAC;KACL;IAED,oCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC;QAEtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,kCAAU,GAAV,UAAW,SAAS;QAClB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAE5C,IAAG,SAAS,KAAK,IAAI,EAAE;YACrB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM,IAAG,SAAS,KAAK,MAAM,EAAE;YAC9B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,IAAG,SAAS,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;;YAE1C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBACjB,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,IAAI,GAAG,CAAC;aAChB,CAAC,CAAC;SACJ;KACF;IAED,kCAAU,GAAV,UAAW,OAAiB;QAC1B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAChC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAE1B,IAAI,YAAY,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAElC,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEpC,IAAG,GAAG,EAAE;gBACN,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aACtB;YAED,GAAG,EAAE,CAAC;YACN,QAAQ,EAAE,CAAC;SACZ;KACF;IAED,qCAAa,GAAb,UAAc,GAAG;QACf,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;QAE/C,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,SAAS,GAAG,IAAI;SACzB,CAAC;QAEF,IAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;YAChC,IAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;YAClC,IAAM,GAAG,GAAG,GAAG,GAAG,SAAS,CAAC;YAC5B,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;SAC7B;QAED,OAAO,MAAM,CAAC;KACf;IAED,qCAAa,GAAb;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK,GAAA,EAAE,GAAG,CAAC,CAAC;KACpE;IAED,kCAAU,GAAV,UAAW,KAAK,EAAE,KAAK,EAAE,GAAG;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,YAAK,EAAE,QAAG,EAAC,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;KACnC;IAED,kCAAU,GAAV,UAAW,KAAK,EAAE,KAAK,EAAE,GAAG;QAC1B,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YACvD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACnC;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,EAAE;YACnE,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE;gBACnC,KAAK,CAAC,MAAM,CAAC,sBAAsB;gBACnC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC;YAClC,IAAI,GAAG;gBAAE,GAAG,CAAC,KAAK,EAAE,CAAC;SACtB;KACF;IAED,iCAAS,GAAT,UAAU,KAAK,EAAE,KAAK,EAAE,GAAG;QACzB,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAO;QAEhC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,KAAKQ,qBAAa,CAAC,UAAU,CAAC;QACjF,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,KAAKA,qBAAa,CAAC,KAAK,CAAC;QAE5E,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,IAAI,UAAU,EAAE;YAC5B,IAAI,UAAU,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChC,IAAM,QAAQ,GAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,QAAC,CAAC;gBAC1C,UAAU,GAAG,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5E;iBAAM,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACxC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;iBAAM;gBACL,IAAM,QAAQ,GAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,QAAC,CAAC;gBAC1C,UAAU,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;aACxC;SACF;aAAM;YACL,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC;IAED,mCAAW,GAAX;QACE,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACxB;KACF;IAvKD;QAACL,oBAAM,EAAE;;qDAAA;IACT;QAACA,oBAAM,EAAE;;sDAAA;IAET;QAACM,uBAAS,CAAC,QAAQ,CAAC;;mDAAA;IAcpB;QAACH,yBAAW,CAAC,cAAc,CAAC;;mDAAA;IAS5B;QAACA,yBAAW,CAAC,aAAa,CAAC;;kDAAA;IA/D7B;QAACC,uBAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,+kCA+BT;SACF,CAAC;;qBAAA;IA4KF,oBAAC;;CAAA,IAAA,AAED;;AC1MO;IAYL,yBAAY,GAAe,EAAU,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QAV9C,iBAAY,GAAsB,IAAIP,0BAAY,EAAE,CAAC;QAW7D,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;KACrD;IAVD,sBAAI,oCAAO;aAAX;YACE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxD;;;OAAA;IAED,sBAAI,oCAAO;aAAX;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;SACtC;;;OAAA;IARD;QAACG,oBAAM,EAAE;;yDAAA;IAnBX;QAACI,uBAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,saAaT;SACF,CAAC;;uBAAA;IAiBF,sBAAC;;CAAA,IAAA,AAED;;ACDO;IAoBL,6BAAmB,OAAmB,EAAU,KAAmB;QAAhD,YAAO,GAAP,OAAO,CAAY;QAAU,UAAK,GAAL,KAAK,CAAc;QAhBzD,mBAAc,GAAsB,IAAIP,0BAAY,EAAE,CAAC;QAEjE,SAAI,GAAa,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAetC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;KAC9D;IAdD,sBAAI,wCAAO;aAAX;YAAA,iBAMC;YALC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC;gBACxC,OAAO,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aACnC,CAAC,CAAC;YAEH,IAAG,IAAI;gBAAE,OAAO,IAAI,CAAC,GAAG,CAAC;SAC1B;;;OAAA;IAED,sBAAI,qCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SAC3C;;;OAAA;IAMD,yCAAW,GAAX,UAAY,IAAI;QACd,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACvB,OAAO;YACL,oBAAoB,EAAE,GAAG,KAAKD,qBAAa,CAAC,GAAG;YAC/C,mBAAmB,EAAE,GAAG,KAAKA,qBAAa,CAAC,IAAI;SAChD,CAAC;KACH;IAED,oCAAM,GAAN;QACE,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEhC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACvB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAC;SACJ;KACF;IAvCD;QAACG,mBAAK,EAAE;;sDAAA;IAER;QAACC,oBAAM,EAAE;;+DAAA;IAnCX;QAACI,uBAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,QAAQ,EAAE,8cAkBT;YACD,IAAI,EAAE;gBACJ,kBAAkB,EAAE,gBAAgB;gBACpC,mBAAmB,EAAE,iBAAiB;gBACtC,eAAe,EAAE,oBAAoB;gBACrC,kBAAkB,EAAE,uBAAuB;gBAC3C,kBAAkB,EAAE,uBAAuB;gBAC3C,gBAAgB,EAAE,qBAAqB;gBACvC,cAAc,EAAE,MAAM;aACvB;SACF,CAAC;;2BAAA;IA4CF,0BAAC;;CAAA,IAAA,AAED;;ACpCO;IAkCL,wBAAY,GAAe;QAhClB,SAAI,GAAW,CAAC,CAAC;QAChB,YAAO,GAAsB,IAAIP,0BAAY,EAAE,CAAC;QAgCxD,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KACpD;IA3BD,sBAAI,sCAAU;aAAd;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACpE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC;;;OAAA;IAGD,sBAAI,iCAAK;aAKT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;aAPD,UAAU,GAAG;YACX,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC/B;;;OAAA;IAOD,sBAAI,gCAAI;aAKR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;aAPD,UAAS,GAAG;YACV,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC/B;;;OAAA;IAUD,oCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACtB;IAED,gCAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,iCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;KACF;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,mCAAU,GAAV,UAAW,IAAY;QACrB,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;YACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;SACJ;KACF;IAED,kCAAS,GAAT,UAAU,IAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9B,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,UAAU,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;QAE3C,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QAEzB,IAAI,UAAU,EAAE;YACd,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5D,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9D;QAED,KAAK,IAAI,GAAG,GAAG,SAAS,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE;YAC/C,KAAK,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,GAAG;aACV,CAAC,CAAC;SACJ;QAED,OAAO,KAAK,CAAC;KACd;IAvFD;QAACE,mBAAK,EAAE;;gDAAA;IACR;QAACC,oBAAM,EAAE;;mDAAA;IAWT;QAACD,mBAAK,EAAE;;;+CAAA;IAUR;QAACA,mBAAK,EAAE;;;8CAAA;IApEV;QAACK,uBAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,qiCAwCT;SACF,CAAC;;sBAAA;IA4FF,qBAAC;;CAAA,IAAA,AAED;;ACrGO;IAUL,0BAAmB,KAAmB,EAAE,OAAmB;QAAxC,UAAK,GAAL,KAAK,CAAc;QACpC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;KAC3D;IAPD,sBAAI,wCAAU;aAAd;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;gBACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9C;;;OAAA;IAMD,wCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAC5C,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEnC,IAAI,MAAM,GAAG;YACX,KAAK,EAAK,MAAM,CAAC,KAAK,CAAC,OAAI;SAC5B,CAAC;QAEF,IAAG,KAAK,KAAK,MAAM,EAAE;YACnB,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;SACjC;aAAM,IAAG,KAAK,KAAK,OAAO,EAAE;YAC3B,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACvD,IAAM,UAAU,GAAG,SAAS,GAAG,OAAO,CAAC;YACvC,IAAM,MAAM,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;SAChC;QAED,OAAO,MAAM,CAAC;KACf;IA9BD;QAACL,mBAAK,EAAE;;iDAAA;IAER;QAACI,yBAAW,CAAC,cAAc,CAAC;;sDAAA;IA5C9B;QAACC,uBAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,8xCAoCT;SACF,CAAC;;wBAAA;IAmCF,uBAAC;;CAAA,IAAA,AAED;;ACnEO;IAAA;KACN;IAZD;QAACA,uBAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,8JAMT;YACD,eAAe,EAAEG,qCAAuB,CAAC,MAAM;SAChD,CAAC;;mBAAA;IAEF,kBAAC;CAAA,IAAA,AAED;;AChBA;;;;;AAKA,yBAAgC,GAAG,EAAE,IAAI;IACvC,IAAG,CAAC,GAAG,IAAI,CAAC,IAAI;QAAE,OAAO,GAAG,CAAC;IAE7B,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE5B,IAAG,KAAK,CAAC,MAAM,EAAE;QACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/C,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;KACF;IAED,OAAO,OAAO,CAAC;CAChB;;ACIM;IAKL,2BAAY,OAAmB;QAC7B,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;KAC5D;IAED,sBAAI,oCAAK;aAAT;YACE,IAAI,CAAC,IAAI,CAAC,GAAG;gBAAE,OAAO,OAAO,CAAC;YAC9B,IAAI,IAAI,GAAQ,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAM,QAAQ,GAAkB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACjD,IAAI,IAAI,IAAI,EAAE,IAAE,IAAI,IAAG,IAAI;gBAAE,IAAI,GAAI,OAAO,CAAC;YAC7C,OAAO,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACnD;;;OAAA;IAE2B,sBAAI,oCAAK;aAAT;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;SACjC;;;OAAA;IAjBD;QAACR,mBAAK,EAAE;;qDAAA;IACR;QAACA,mBAAK,EAAE;;kDAAA;IAcR;QAACI,yBAAW,CAAC,aAAa,CAAC;;kDAAA;IAnC7B;QAACC,uBAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,uWAcT;SACF,CAAC;;yBAAA;IAsBF,wBAAC;;CAAA,IAAA,AAED;;AC7CA;;;;;;;;;;;;AAYO;IAKL,4BAAY,OAAO,EAAE,QAAQ;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;;;;;;;;;QAYzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC3B;IAED,wCAAW,GAAX,UAAY,OAAO;QAAnB,iBAYC;QAXC,IAAI,eAAe,GAAG;YACpB,IAAA,oCAAyD,EAAjD,gBAAK,EAAE,kBAAM,CAAqC;YAE1D,IAAI,KAAK,IAAI,MAAM,EAAE;gBACnB,IAAG,KAAI,CAAC,QAAQ;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;aACnC;iBAAM;gBACL,UAAU,CAAC,cAAM,OAAA,eAAe,EAAE,GAAA,EAAE,EAAE,CAAC,CAAC;aACzC;SACF,CAAC;QAEF,eAAe,EAAE,CAAC;KACnB;IAED,sCAAS,GAAT,UAAU,kBAAkB,EAAE,gBAAgB;QAC5C,OAAO,CAAC,CAAC,gBAAgB,CAAC,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC;YAClD,CAAC,kBAAkB,CAAC,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;KACxE;IAED,iDAAoB,GAApB,UAAqB,OAAO,EAAE,QAAQ;QACpC,OAAO,OAAO,CAAC,cAAc,CAAC;;QAG9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;QAE5C,IAAI,WAAW,IAAI,OAAO,EAAE;YAC1B,OAAO,OAAO,CAAC,SAAS,CAAC;YACzB,IAAG,IAAI,CAAC,QAAQ;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SAC7B;KACF;IAED,2CAAc,GAAd,UAAe,OAAO;QAAtB,iBAuBC;QAtBC,OAAO,CAAC,OAAO,CAAC,UAAC,YAAY;YAC3B,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC;YAElC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAChC,YAAY,CAAC,kBAAkB,EAC/B,YAAY,CAAC,gBAAgB,CAAC,CAAC;YAEjC,IAAI,WAAW,IAAI,OAAO,EAAE;;gBAE1B,OAAO,CAAC,cAAc,GAAG,UAAU,CACjC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,EACpC,IAAI,EACJ,OAAO,EACP,KAAI,CAAC,QAAQ,CAAC,CAAC;aAClB;iBAAM;;gBAEL,IAAI,gBAAgB,IAAI,OAAO,EAAE;oBAC/B,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACrC,OAAO,OAAO,CAAC,cAAc,CAAC;iBAC/B;aACF;SACF,CAAC,CAAC;KACJ;IAEH,yBAAC;CAAA,IAAA,AAED;;AClFA;;;;;;;;;;;AAYO;IAML,oBAAY,OAAmB;QAJD,YAAO,GAAY,KAAK,CAAC;QAE7C,uBAAkB,GAAsB,IAAIP,0BAAY,EAAE,CAAC;QAGnE,IAAI,kBAAkB,CACpB,OAAO,CAAC,aAAa,EACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpC;IAED,oCAAe,GAAf;QAAA,iBAMC;;QAJC,UAAU,CAAC;YACT,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC,CAAC,CAAC;KACJ;IAhBD;QAACM,yBAAW,CAAC,eAAe,CAAC;;+CAAA;IAE7B;QAACH,oBAAM,EAAE;;0DAAA;IALX;QAACL,uBAAS,CAAC,EAAE,QAAQ,EAAE,uBAAuB,EAAE,CAAC;;kBAAA;IAqBjD,iBAAC;;CAAA,IAAA,AAED;;AClCO;IAAA;QAEI,aAAQ,GAAW,GAAG,CAAC;QAEtB,gBAAW,GAAsB,IAAIE,0BAAY,EAAE,CAAC;QACpD,mBAAc,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QACvD,mBAAc,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAKzD,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,CAAC,CAAC;KA0D5B;IAvDC,sBAAI,4BAAK;aAAT,cAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;;;OAAA;IAGrC,sBAAI,gCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;;;OAAA;IAG7C,+BAAW,GAAX,UAAY,KAAK;QAAjB,iBAiBC;;QAfC,IAAG,KAAK,CAAC,KAAK,KAAK,CAAC;YAAE,OAAO;QAE7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAE5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClB;IAGD,+BAAW,GAAX,UAAY,KAAK;QACf,IAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtC,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAClD,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAClD,IAAG,MAAM,IAAI,MAAM,EAAE;gBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;SACF;KACF;IAED,wBAAI,GAAJ,UAAK,KAAK;QAAV,iBAOC;QANC,IAAG,IAAI,CAAC,YAAY,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;gBACxB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAClB,EAAE,EAAE,CAAC,CAAC;SACR;KACF;IAED,4BAAQ,GAAR;QACE,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;IAGD,6BAAS,GAAT,cAAc,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE;IAlEhC;QAACE,mBAAK,EAAE;;+CAAA;IAER;QAACC,oBAAM,EAAE;;kDAAA;IACT;QAACA,oBAAM,EAAE;;qDAAA;IACT;QAACA,oBAAM,EAAE;;qDAAA;IAQT;QAACG,yBAAW,CAAC,aAAa,CAAC;;0CAAA;IAG3B;QAACA,yBAAW,CAAC,iBAAiB,CAAC;;8CAAA;IAG/B;QAACD,0BAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;gDAAA;IAoBtC;QAACA,0BAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;gDAAA;IA2BtC;QAACA,0BAAY,CAAC,SAAS,CAAC;;;;8CAAA;IApE1B;QAACP,uBAAS,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC;;iBAAA;IAuExC,gBAAC;;CAAA,IAAA,AAED;;ACzEO;IAYL,oBAAY,OAAmB;QAVtB,kBAAa,GAAY,IAAI,CAAC;QAG7B,aAAQ,GAAsB,IAAIE,0BAAY,EAAE,CAAC;QAInD,gBAAW,GAAW,CAAC,CAAC;QACxB,aAAQ,GAAY,KAAK,CAAC;QAGhC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;QAErC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAChC;KACF;IAGD,8BAAS,GAAT;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9C;KACF;IAGD,gCAAW,GAAX,UAAY,KAAK;QAAjB,iBAUC;QATC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAElE,IAAI,QAAQ,EAAE;YACZ,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,YAAY,GAAGW,kBAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC;iBAC5D,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SACnC;KACF;IAED,yBAAI,GAAJ,UAAK,KAAK;QACR,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9F,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACvC,IAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;QAE1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;QAEjC,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;QACjE,IAAM,aAAa,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;QAElE,IAAI,YAAY,IAAI,aAAa,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAM,QAAQ,OAAI,CAAC;SAC5C;KACF;IAxDD;QAACT,mBAAK,EAAE;;qDAAA;IACR;QAACA,mBAAK,EAAE;;gDAAA;IACR;QAACA,mBAAK,EAAE;;gDAAA;IACR;QAACC,oBAAM,EAAE;;gDAAA;IAiBT;QAACE,0BAAY,CAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;+CAAA;IAU7C;QAACA,0BAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iDAAA;IAtCxC;QAACP,uBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE;gBACJ,oBAAoB,EAAE,eAAe;aACtC;SACF,CAAC;;kBAAA;IA6DF,iBAAC;;CAAA,IAAA,AAED;;ACpEA;;;;;;;;AASO;IAkBL,mBAAY,OAAmB;QAVtB,UAAK,GAAY,IAAI,CAAC;QACtB,UAAK,GAAY,IAAI,CAAC;QAErB,gBAAW,GAAsB,IAAIE,0BAAY,EAAE,CAAC;QACpD,eAAU,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QACnD,cAAS,GAAsB,IAAIA,0BAAY,EAAE,CAAC;QAEpD,aAAQ,GAAY,KAAK,CAAC;QAIhC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;KACtC;IAGD,6BAAS,GAAT,UAAU,KAAK;QACb,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,YAAK;gBACL,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAC;SACJ;KACF;IAGD,+BAAW,GAAX,UAAY,KAAK;QAAjB,iBAeC;QAdC,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAChD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAM,cAAY,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;YAC5D,IAAI,CAAC,YAAY,GAAGW,kBAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC;iBAC5D,SAAS,CAAC,UAAC,EAAE,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,cAAY,CAAC,GAAA,CAAC,CAAC;YAElD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACpB,YAAK;gBACL,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAC;SACJ;KACF;IAED,wBAAI,GAAJ,UAAK,KAAK,EAAE,YAAY;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE3B,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC;QACzC,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,OAAI,CAAC;QACnD,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,OAAI,CAAC;QAElD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACnB,YAAK;gBACL,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAC;SACJ;KACF;IAnED;QAACT,mBAAK,EAAE;;4CAAA;IAER;QAACA,mBAAK,EAAE;;4CAAA;IACR;QAACA,mBAAK,EAAE;;4CAAA;IAER;QAACC,oBAAM,EAAE;;kDAAA;IACT;QAACA,oBAAM,EAAE;;iDAAA;IACT;QAACA,oBAAM,EAAE;;gDAAA;IAST;QAACE,0BAAY,CAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;8CAAA;IAe7C;QAACA,0BAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;gDAAA;IAtCxC;QAACP,uBAAS,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;;iBAAA;IA4EvC,gBAAC;;CAAA,IAAA,AAED;;AC9EO;IAAA;QAEK,cAAS,GAAsB,IAAIE,0BAAY,EAAE,CAAC;KAmD7D;IA5CC,sCAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;YAClB,OAAA,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBACpD,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;SAAA,CAAC,CAAC;KACrD;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAmB,UAAoB,EAApB,KAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAApB,cAAoB,EAApB,IAAoB;YAAnC,IAAI,OAAO,SAAA;YACb,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAI;gBACpC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAC5C,KAAK,EAAE,CAAC,EAAE;aACX,CAAC;SACH;KACF;IAED,6BAAS,GAAT,UAAU,EAAkB;YAAhB,oBAAO,EAAE,gBAAK;QACxB,IAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,SAAS,GAAG,MAAM,GAAG,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YAC7D,IAAI,UAAU,GAAG,MAAM,GAAG,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YAE9D,IAAG,SAAS,IAAI,UAAU,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBAClB,SAAS,EAAE,OAAO,CAAC,KAAK;oBACxB,QAAQ,EAAE,CAAC;oBACX,YAAK;iBACN,CAAC,CAAC;aACJ;YAED,CAAC,EAAE,CAAC;SACL;QAED,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;KAC7B;IAjDD;QAACG,oBAAM,EAAE;;gDAAA;IAET;QAACC,6BAAe,CAAC,SAAS,CAAC;;4CAAA;IAL7B;QAACN,uBAAS,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;;iBAAA;IAsDvC,gBAAC;;CAAA,IAAA,AAED;;ACxDO;IAUL,yBAAoB,aAA+B;QAA/B,kBAAa,GAAb,aAAa,CAAkB;KAAK;IAExD,qCAAW,GAAX,UAAY,OAAwC;QAClD,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE;YAC9B,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAChC;YAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAC1D,IAAI,CAAC,eAAe,EAAE;gBACpB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAC;SACN;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAChD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC/C;KACF;IA/BD;QAACI,mBAAK,EAAE;;4DAAA;IACR;QAACA,mBAAK,EAAE;;kDAAA;IACR;QAACA,mBAAK,EAAE;;gDAAA;IACR;QAACA,mBAAK,EAAE;;mDAAA;IACR;QAACA,mBAAK,EAAE;;iDAAA;IAPV;QAACJ,uBAAS,CAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE,CAAC;;uBAAA;IAmC7C,sBAAC;;CAAA,IAAA,AAED;;ACuBO;IAAA;KAAiC;IA/BxC;QAACc,sBAAQ,CAAC;YACR,OAAO,EAAE;gBACPC,4BAAY;aACb;YACD,YAAY,EAAE;gBACZ,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,SAAS;gBACT,SAAS;gBACT,eAAe;gBACf,QAAQ;gBACR,SAAS;gBACT,eAAe;gBACf,eAAe;gBACf,mBAAmB;gBACnB,aAAa;gBACb,eAAe;gBACf,cAAc;gBACd,WAAW;gBACX,gBAAgB;gBAChB,iBAAiB;aAClB;YACD,SAAS,EAAE;gBACT,YAAY;aACb;YACD,OAAO,EAAE;gBACP,SAAS;gBACT,eAAe;aAChB;SACF,CAAC;;+BAAA;IACqC,8BAAC;CAAA,IAAA,AAExC,AAUA;;;;;"}